import{_ as n,c as s,o as a,a as t}from"./app.691937e0.js";const g='{"title":"\u6811","description":"","frontmatter":{"title":"\u6811","tags":["Algorithm","DataStructures"]},"headers":[{"level":2,"title":"\u4E8C\u53C9\u6811","slug":"\u4E8C\u53C9\u6811"},{"level":3,"title":"\u4E8C\u53C9\u6811\u7684\u904D\u5386","slug":"\u4E8C\u53C9\u6811\u7684\u904D\u5386"},{"level":2,"title":"\u591A\u53C9\u6811","slug":"\u591A\u53C9\u6811"},{"level":2,"title":"\u68EE\u6797","slug":"\u68EE\u6797"}],"relativePath":"algorithm/data/03-\u6811.md","lastUpdated":1654002520000}',p={},o=t(`<h1 id="\u6811" tabindex="-1">\u6811 <a class="header-anchor" href="#\u6811" aria-hidden="true">#</a></h1><h2 id="\u4E8C\u53C9\u6811" tabindex="-1">\u4E8C\u53C9\u6811 <a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h2><h3 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386" tabindex="-1">\u4E8C\u53C9\u6811\u7684\u904D\u5386 <a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386" aria-hidden="true">#</a></h3><p>\u4E8C\u53C9\u6811\u662F\u4E00\u79CD\u91CD\u8981\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5F88\u591A\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u90FD\u662F\u57FA\u4E8E\u4E8C\u53C9\u6811\u7684\u57FA\u7840\u6F14\u53D8\u800C\u6765\u7684\u3002\u5BF9\u4E8E\u4E8C\u53C9\u6811\uFF0C\u6709\u6DF1\u5EA6\u904D\u5386\u548C\u5E7F\u5EA6\u904D\u5386\u3002</p><p>\u7531\u4E8E\u6811\u7684\u5B9A\u4E49\u672C\u8EAB\u5C31\u662F\u9012\u5F52\u5B9A\u4E49\uFF0C\u56E0\u6B64\u91C7\u7528\u9012\u5F52\u7684\u65B9\u6CD5\u53BB\u5B9E\u73B0\u6811\u7684\u4E09\u79CD\u904D\u5386\u4E0D\u4EC5\u5BB9\u6613\u7406\u89E3\u800C\u4E14\u4EE3\u7801\u7B80\u6D01\u3002</p><p>\u6DF1\u5EA6\u904D\u5386\uFF1A</p><ul><li>\u524D\u5E8F\u904D\u5386</li><li>\u4E2D\u5E8F\u904D\u5386</li><li>\u540E\u7EED\u904D\u5386</li></ul><p>\u5E7F\u5EA6\u904D\u5386\uFF1A</p><ul><li>\u53EA\u9700\u6309\u5C42\u6B21\u904D\u5386\u5373\u53EF</li></ul><p>\u4F8B\uFF1A<br> \u5BF9\u4E8E\u8FD9\u6837\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF1A</p><div class="language-mermaid"><pre><code><span class="token keyword">graph</span> TD<span class="token punctuation">;</span>

1<span class="token text string">((1))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((2))</span><span class="token arrow operator">--&gt;</span>4<span class="token text string">((4))</span><span class="token punctuation">;</span>
1<span class="token text string">((1))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((3))</span><span class="token arrow operator">--&gt;</span>6<span class="token text string">((6))</span><span class="token punctuation">;</span>

2<span class="token text string">((2))</span><span class="token arrow operator">--&gt;</span>5<span class="token text string">((5))</span><span class="token arrow operator">--&gt;</span>7<span class="token text string">((7))</span><span class="token punctuation">;</span>
5<span class="token text string">((5))</span><span class="token arrow operator">--&gt;</span>8<span class="token text string">((8))</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E0B\u9762\u9010\u4E2A\u4ECB\u7ECD\u5176\u904D\u5386\u65B9\u5F0F</p><h4 id="\u524D\u5E8F\u904D\u5386" tabindex="-1">\u524D\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u524D\u5E8F\u904D\u5386" aria-hidden="true">#</a></h4><div class="language-mermaid"><pre><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>

1<span class="token text string">((root))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((left))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((right))</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5373\u5148\u904D\u5386\u6839\u8282\u70B9\uFF0C\u518D\u904D\u5386\u5DE6\u6811\uFF0C\u53F3\u6811</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> u <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7ED3\u679C\uFF1A<code>1 2 4 5 7 8 3 6</code></p><h4 id="\u4E2D\u5E8F\u904D\u5386" tabindex="-1">\u4E2D\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a></h4><div class="language-mermaid"><pre><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>

1<span class="token text string">((left))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((root))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((right))</span><span class="token punctuation">;</span>

</code></pre></div><p>\u5373\u5148\u904D\u5386\u5DE6\u6811\uFF0C\u518D\u904D\u5386\u6839\u8282\u70B9\uFF0C\u53F3\u6811</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> u <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7ED3\u679C\uFF1B<code>4 2 7 5 8 1 6 3</code></p><h4 id="\u540E\u5E8F\u904D\u5386" tabindex="-1">\u540E\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a></h4><div class="language-mermaid"><pre><code>
<span class="token keyword">graph</span> LR<span class="token punctuation">;</span>

1<span class="token text string">((left))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((right))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((root))</span><span class="token punctuation">;</span>

</code></pre></div><p>\u5373\u5148\u904D\u5386\u5DE6\u6811\uFF0C\u518D\u904D\u5386\u53F3\u6811\uFF0C\u6839\u8282\u70B9</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> u <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7ED3\u679C\uFF1A<code>4 7 8 5 2 6 3 1</code></p><h4 id="\u5C42\u6B21\u904D\u5386" tabindex="-1">\u5C42\u6B21\u904D\u5386 <a class="header-anchor" href="#\u5C42\u6B21\u904D\u5386" aria-hidden="true">#</a></h4><p>\u4ECE\u4E0A\u5230\u4E0B\u4E00\u5C42\u5C42\u904D\u5386</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><pre><code><span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> q<span class="token punctuation">;</span>
    
    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> t <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        
        cout <span class="token operator">&lt;&lt;</span> t <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7ED3\u679C\uFF1A<code>1 2 3 4 5 6 7 8</code></p><h2 id="\u591A\u53C9\u6811" tabindex="-1">\u591A\u53C9\u6811 <a class="header-anchor" href="#\u591A\u53C9\u6811" aria-hidden="true">#</a></h2><h2 id="\u68EE\u6797" tabindex="-1">\u68EE\u6797 <a class="header-anchor" href="#\u68EE\u6797" aria-hidden="true">#</a></h2>`,37),e=[o];function c(l,u,i,r,k,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{g as __pageData,f as default};

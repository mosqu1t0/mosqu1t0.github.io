import{_ as n,c as s,o as a,a as p}from"./app.bedca8f7.js";const d='{"title":"\u52A8\u6001\u89C4\u5212","description":"","frontmatter":{"title":"\u52A8\u6001\u89C4\u5212"},"headers":[{"level":2,"title":"\u52A8\u6001\u89C4\u5212","slug":"\u52A8\u6001\u89C4\u5212"},{"level":3,"title":"\u8BB0\u5FC6\u5316\u641C\u7D22","slug":"\u8BB0\u5FC6\u5316\u641C\u7D22"},{"level":3,"title":"\u533A\u95F4 DP","slug":"\u533A\u95F4-dp"}],"relativePath":"algorithm/05-\u52A8\u6001\u89C4\u5212.md","lastUpdated":1656912965000}',t={},o=p(`<h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1">\u52A8\u6001\u89C4\u5212 <a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a></h2><p>\u2003\u2003\u52A8\u6001\u89C4\u5212\u662F\u4E00\u79CD\u901A\u8FC7\u628A\u539F\u95EE\u9898\u5206\u89E3\u4E3A\u76F8\u5BF9\u7B80\u5355\u7684\u5B50\u95EE\u9898\u7684\u65B9\u5F0F\u6C42\u89E3\u590D\u6742\u95EE\u9898\u7684\u65B9\u6CD5</p><p>\u2003\u2003\u7531\u4E8E\u52A8\u6001\u89C4\u5212\u5E76\u4E0D\u662F\u67D0\u79CD\u5177\u4F53\u7684\u7B97\u6CD5\uFF0C\u800C\u662F\u4E00\u79CD\u89E3\u51B3\u7279\u5B9A\u95EE\u9898\u7684\u65B9\u6CD5\uFF0C\u56E0\u6B64\u5B83\u4F1A\u51FA\u73B0\u5728\u5404\u5F0F\u5404\u6837\u7684\u6570\u636E\u7ED3\u6784\u4E2D\uFF0C\u4E0E\u4E4B\u76F8\u5173\u7684\u9898\u76EE\u79CD\u7C7B\u4E5F\u66F4\u4E3A\u590D\u6742</p><p><strong>\u601D\u60F3\uFF1A</strong><br></p><p>\u6709\u4E00\u4E2A\u4E8B\u5B9E\uFF0C\u4E00\u6761\u6700\u4F18\u7684\u8DEF\u5F84\uFF0C\u5B83\u7684\u6BCF\u4E00\u6B65\u51B3\u7B56\u90FD\u662F\u6700\u4F18\u7684</p><p>\u56E0\u6B64\u4E00\u4E2A\u5B50\u95EE\u9898\u7684\u7684\u51B3\u7B56\u5F97\u5230\u7684\u6700\u5927\uFF08\u6216\u6700\u5C0F\uFF09\u6743\u503C\uFF0C\u7528\u8FD9\u4E2A\u6743\u503C\u6267\u884C\u4E0B\u4E00\u6B65\u51B3\u7B56\uFF0C\u53EF\u4EE5\u7F29\u5C0F\u95EE\u9898\u7684\u89C4\u6A21\uFF0C\u5C06\u4E00\u4E2A\u95EE\u9898\u5206\u6210\u591A\u4E2A\u89C4\u6A21\u66F4\u5C0F\u7684\u95EE\u9898</p><blockquote><p>\u5B50\u95EE\u9898\u95F4\u91CD\u53E0\u7684\u90E8\u5206\u6709\u53EF\u80FD\u4F1A\u6709\u5F88\u591A\uFF0C\u540C\u4E00\u4E2A\u5B50\u95EE\u9898\u53EF\u80FD\u4F1A\u88AB\u91CD\u590D\u8BBF\u95EE\u591A\u6B21\u6743\uFF0C\u6548\u7387\u8FD8\u662F\u4E0D\u9AD8\u3002\u53EF\u4EE5\u628A\u6BCF\u4E2A\u5B50\u95EE\u9898\u7684\u89E3\u50A8\u5B58\u8D77\u6765\uFF0C\u901A\u8FC7\u8BB0\u5FC6\u5316\u7684\u65B9\u5F0F\u9650\u5236\u8BBF\u95EE\u987A\u5E8F\uFF0C\u786E\u4FDD\u6BCF\u4E2A\u5B50\u95EE\u9898\u53EA\u88AB\u8BBF\u95EE\u4E00\u6B21\u3002</p></blockquote><p><strong>\u539F\u7406\uFF1A</strong><br></p><ul><li>\u6700\u4F18\u5B50\u7ED3\u6784 <blockquote><p>\u5373\uFF0C\u4E00\u4E2A\u95EE\u9898\u7684\u6700\u4F18\u89E3\u8981\u6C42\u5B83\u7684\u5B50\u95EE\u9898\u4E5F\u662F\u6700\u4F18\u89E3\uFF0C\u5177\u6709\u6700\u4F18\u5B50\u7ED3\u6784\u4E5F\u53EF\u80FD\u662F\u9002\u5408\u7528\u8D2A\u5FC3\u65B9\u6CD5\u6C42\u89E3\u3002</p></blockquote></li><li>\u65E0\u540E\u6548\u6027 <blockquote><p>\u5DF2\u7ECF\u6C42\u89E3\u7684\u5B50\u95EE\u9898\uFF0C\u4E0D\u4F1A\u518D\u53D7\u5230\u540E\u7EED\u51B3\u7B56\u7684\u5F71\u54CD\u3002</p></blockquote></li><li>\u5B50\u95EE\u9898\u91CD\u53E0 <blockquote><p>\u5982\u679C\u6709\u5927\u91CF\u7684\u91CD\u53E0\u5B50\u95EE\u9898\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u7A7A\u95F4\u5C06\u8FD9\u4E9B\u5B50\u95EE\u9898\u7684\u89E3\u5B58\u50A8\u4E0B\u6765\uFF0C\u907F\u514D\u91CD\u590D\u6C42\u89E3\u76F8\u540C\u7684\u5B50\u95EE\u9898\uFF0C\u4ECE\u800C\u63D0\u5347\u6548\u7387\u3002</p></blockquote></li></ul><p><strong>\u6B65\u9AA4</strong>\uFF1A</p><ol><li><p>\u5C06\u539F\u95EE\u9898\u5212\u5206\u4E3A\u82E5\u5E72\u9636\u6BB5\uFF0C\u6BCF\u4E2A\u9636\u6BB5\u5BF9\u5E94\u82E5\u5E72\u4E2A\u5B50\u95EE\u9898\uFF0C\u63D0\u53D6\u8FD9\u4E9B\u5B50\u95EE\u9898\u7684\u7279\u5F81\uFF08\u79F0\u4E4B\u4E3A<strong>\u72B6\u6001</strong>\uFF09</p></li><li><p>\u5BFB\u627E\u6BCF\u4E00\u4E2A\u72B6\u6001\u7684\u53EF\u80FD <strong>\u51B3\u7B56</strong>, \u6216\u8005\u8BF4\u662F\u5404\u72B6\u6001\u95F4\u7684\u76F8\u4E92\u8F6C\u79FB\u65B9\u5F0F\uFF08\u7528\u6570\u5B66\u8BED\u8A00\u63CF\u8FF0\u5C31\u662F\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF09</p></li><li><p>\u6309\u987A\u5E8F\u6C42\u89E3\u6BCF\u4E00\u4E2A\u9636\u6BB5\u7684\u95EE\u9898</p></li></ol><p>\u5728\u56FE\u8BBA\u4E0A\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u6709\u5411\u65E0\u73AF\u56FE\uFF0C\u6BCF\u4E00\u4E2A\u72B6\u6001\u5BF9\u5E94\u56FE\u4E0A\u4E00\u4E2A\u8282\u70B9\uFF0C\u51B3\u7B56\u5BF9\u5E94\u8282\u70B9\u95F4\u7684\u8FDE\u8FB9\u3002\u8FD9\u6837\u7684\u95EE\u9898\u8F6C\u6362\u6210\u56FE\u4E0A\u5BFB\u627E\u4E00\u4E2A\u6700\u503C\u7684\u95EE\u9898\u3002</p><blockquote><p>\u5173\u952E\u662F\u5BFB\u627E\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF0C\u800C\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u7684\u5F62\u6210\u53C8\u662F\u53D6\u51B3\u4E8E\u6570\u7EC4\uFF08\u533A\u95F4\uFF09\u7684\u610F\u4E49\u3002</p></blockquote><br><p><a href="https://www.luogu.com.cn/problem/P1216" target="_blank" rel="noopener noreferrer">\u6D1B\u8C37 P1216</a></p><p>\u8FD9\u662F\u4E00\u9053 dp \u5165\u95E8\u9898\uFF0C\u5176\u4E2D\u8FD9\u91CC <code>a[i][j]</code> \u8868\u793A\u4ECE\u70B9<code>(i, j)</code>\u901A\u8FC7\u82E5\u5E72\u70B9\u8D70\u5230\u5E95\u5C42\uFF0C \u53D6\u503C\u548C\u7684\u6700\u5927\u503C<br> \u56E0\u6B64\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u4E3A<code>a[i][j] += max(a[i + 1][j], a[i + 1][j + 1]);</code>\u8868\u793A\u8BE5\u70B9\u8D70\u5230\u5E95\u53D6\u503C\u7684\u6700\u5927\u503C<br></p><p>\u5171\u6709\u4E24\u4E2A\u51B3\u7B56\uFF1A</p><ul><li>\u8D70\u5230\u8BE5\u70B9\u4E0B\u65B9</li><li>\u8D70\u5230\u8BE5\u70B9\u53F3\u4E0B\u65B9</li></ul><p>\u90A3\u4E48\u4E24\u4E2A\u51B3\u7B56\u7684\u6700\u5927\u503C\u5C31\u662F\u6700\u540E\u7684\u51B3\u7B56\u3002</p><blockquote><p>\u5373\u6EE1\u8DB3\u6700\u4F18\u5B50\u7ED3\u6784</p></blockquote><br><div class="language-cpp line-numbers-mode"><pre><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1003</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="\u8BB0\u5FC6\u5316\u641C\u7D22" tabindex="-1">\u8BB0\u5FC6\u5316\u641C\u7D22 <a class="header-anchor" href="#\u8BB0\u5FC6\u5316\u641C\u7D22" aria-hidden="true">#</a></h3><p>\u2003\u2003\u8BB0\u5FC6\u5316\u641C\u7D22\u662F\u4E00\u79CD\u901A\u8FC7\u8BB0\u5F55\u5DF2\u7ECF\u904D\u5386\u8FC7\u7684\u72B6\u6001\u7684\u4FE1\u606F\uFF0C\u4ECE\u800C\u907F\u514D\u5BF9\u540C\u4E00\u72B6\u6001\u91CD\u590D\u904D\u5386\u7684\u641C\u7D22\u5B9E\u73B0\u65B9\u5F0F\u3002</p><p>\u2003\u2003\u56E0\u4E3A\u8BB0\u5FC6\u5316\u641C\u7D22\u786E\u4FDD\u4E86\u6BCF\u4E2A\u72B6\u6001\u53EA\u8BBF\u95EE\u4E00\u6B21\uFF0C\u5B83\u4E5F\u662F\u4E00\u79CD\u5E38\u89C1\u7684\u52A8\u6001\u89C4\u5212\u5B9E\u73B0\u65B9\u5F0F\u3002</p><p>\u4F8B\uFF1A <br> \u666E\u901A\u7684 01 \u80CC\u5305\u95EE\u9898</p><p>\u4F7F\u7528\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\u8BB0\u5F55\u8BA1\u7B97\u8FC7\u7684\u72B6\u6001</p><div class="language-cpp line-numbers-mode"><pre><code>include <span class="token operator">&lt;</span>iostream<span class="token operator">&gt;</span>
include <span class="token operator">&lt;</span>cstring<span class="token operator">&gt;</span>
include <span class="token operator">&lt;</span>cmath<span class="token operator">&gt;</span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1010</span><span class="token punctuation">,</span> INF <span class="token operator">=</span> <span class="token number">0x3f3f3f3f</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> c<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> w<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> mm<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span> v<span class="token punctuation">;</span>


<span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mm<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> mm<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">==</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> mm<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> dfs1<span class="token punctuation">,</span> dfs2 <span class="token operator">=</span> <span class="token operator">-</span>INF<span class="token punctuation">;</span>
        dfs1 <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;=</span>c<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">)</span>
        dfs2 <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> left <span class="token operator">-</span> c<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> w<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> mm<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dfs1<span class="token punctuation">,</span> dfs2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> v<span class="token punctuation">;</span>

    <span class="token function">memset</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> mm<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span>
        cin <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span> w<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>


    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><blockquote><p>\u4E0E\u9012\u5F52\u7684\u8054\u7CFB\u4E0E\u533A\u522B\uFF1A\u5728\u5F62\u5F0F\u4E0A\u4E24\u8005\u662F\u9AD8\u5EA6\u7C7B\u4F3C\u7684\u3002\u8FD9\u662F\u7531\u4E8E\u4ED6\u4EEC\u4F7F\u7528\u4E86\u76F8\u540C\u7684\u72B6\u6001\u8868\u793A\u65B9\u5F0F\u548C\u7C7B\u4F3C\u7684\u72B6\u6001\u8F6C\u79FB\u3002\u4E5F\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u4E00\u822C\u6765\u8BF4\u4E24\u79CD\u5B9E\u73B0\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F\u4E00\u6837\u7684</p></blockquote><br><p><a href="https://www.luogu.com.cn/problem/P1434" target="_blank" rel="noopener noreferrer">\u6D1B\u8C37 p1413</a></p><p>\u6ED1\u96EA\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8BB0\u5FC6\u5316\u7684\u601D\u8DEF\u6765\u8003\u8651\u3002<br></p><p>\u603B\u7ED3\u4E00\u4E0B\u8BB0\u5FC6\u5316\u641C\u7D22\u7684\u6B65\u9AA4\uFF1A</p><ul><li>\u8BB0\u5FC6\u6570\u7EC4\u521D\u59CB\u5316\uFF08\u6BD4\u5982\u8BF4\u6C42\u6700\u5927\u503C\u5C31\u521D\u59CB\u5316\u4E3A-1\uFF09</li><li>\u5F53\u641C\u7D22\u5230\u67D0\u4E2A\u72B6\u6001\u65F6\uFF0C\u82E5\u8BE5\u72B6\u6001\u5DF2\u7ECF\u66F4\u65B0\u8FC7\u4E86\uFF0C\u76F4\u63A5\u8FD4\u56DE</li><li>\u82E5\u8BE5\u72B6\u6001\u8FD8\u672A\u66F4\u65B0\uFF0C\u5219\u548C\u4E00\u822C dp \u4E00\u6837\u7528\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u66F4\u65B0</li></ul><div class="language-cpp line-numbers-mode"><pre><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">103</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> g<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> dx<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> dy<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
<span class="token keyword">int</span> res<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">dp</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> ma <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> x <span class="token operator">+</span> dx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> b <span class="token operator">=</span> y <span class="token operator">+</span> dy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> a <span class="token operator">&gt;</span> n <span class="token operator">||</span> b <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> b <span class="token operator">&gt;</span> m<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>g<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">&gt;</span> g<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span> ma <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>ma <span class="token punctuation">,</span> <span class="token function">dp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> ma <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>

    <span class="token function">memset</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>g<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            res <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">dp</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> res <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="\u533A\u95F4-dp" tabindex="-1">\u533A\u95F4 DP <a class="header-anchor" href="#\u533A\u95F4-dp" aria-hidden="true">#</a></h3><p>\u533A\u95F4 dp \u4E00\u822C\u4F7F\u7528\u4E24\u7EF4\u8868\u793A\u4E00\u6BB5\u533A\u95F4\u7684\u7AEF\u70B9\u7684\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\u4F7F\u7528\u9012\u63A8\u65F6\uFF0C\u4F1A\u5148\u679A\u4E3E\u533A\u95F4\u7684\u957F\u5EA6\u518D\u679A\u4E3E\u5DE6\uFF08\u6216\u53F3\u7AEF\u70B9\uFF09\uFF0C\u7136\u540E\u4F7F\u7528\u5DE6\u7AEF\u70B9+\u533A\u95F4\u957F\u5EA6\uFF08\u53F3\u7AEF\u70B9-\u533A\u95F4\u957F\u5EA6\uFF09\u8868\u793A\u53F3\uFF08\u5DE6\uFF09\u7AEF\u70B9\u3002</p><blockquote><p>\u6CE8\u610F\u679A\u4E3E\u533A\u95F4\u957F\u5EA6\u65F6\uFF0C\u7531\u4E8E\u8303\u56F4\u95EE\u9898\uFF0C\u533A\u95F4\u957F\u5EA6\u53EF\u80FD\u7531 0 \u5F00\u59CB</p></blockquote><br><p><a href="https://www.luogu.com.cn/problem/P1005" target="_blank" rel="noopener noreferrer"> \u6D1B\u8C37 P1005 </a></p><div class="language-cpp line-numbers-mode"><pre><code>include <span class="token operator">&lt;</span>bits<span class="token operator">/</span>stdc<span class="token operator">++</span><span class="token punctuation">.</span>h<span class="token operator">&gt;</span>
define LL __int128

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">83</span><span class="token punctuation">;</span>
LL a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>
LL f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>
LL res<span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

<span class="token keyword">inline</span> LL
<span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    LL x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&lt;</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">||</span> ch <span class="token operator">&gt;</span> <span class="token char">&#39;9&#39;</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span> f <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&gt;=</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        x <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> ch <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
        ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> x <span class="token operator">*</span> f<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">inline</span> <span class="token keyword">void</span>
<span class="token function">print</span><span class="token punctuation">(</span>LL x<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x <span class="token operator">=</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">putchar</span><span class="token punctuation">(</span>x <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

LL
<span class="token function">dp</span><span class="token punctuation">(</span>LL a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">+</span> j <span class="token operator">&lt;=</span> m <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            f<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> res <span class="token operator">+=</span> <span class="token function">dp</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><blockquote><p>\u8FD9\u91CC\u7684\u533A\u95F4\u8868\u793A\u533A\u95F4\u5185\u6700\u5927\u503C\uFF0C\u90A3\u4E48\u6839\u636E\u9898\u610F\u4E00\u6B21\u53EA\u80FD\u4ECE\u533A\u95F4\u5DE6\u53F3\u7AEF\u70B9\u53D6\u503C\uFF0C\u56E0\u6B64\u7531 \u5DE6\u7AEF\u70B9+1 \u6216 \u53F3\u7AEF\u70B9-1 \u8F6C\u79FB\u8FC7\u6765</p></blockquote>`,42),e=[o];function c(l,u,r,k,i,b){return a(),s("div",null,e)}var w=n(t,[["render",c]]);export{d as __pageData,w as default};

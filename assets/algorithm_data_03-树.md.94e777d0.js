import{_ as n,c as s,o as a,a as p}from"./app.f2ba6d58.js";const m='{"title":"\u6811","description":"","frontmatter":{"title":"\u6811","tags":["Algorithm","DataStructures"]},"headers":[{"level":2,"title":"\u4E8C\u53C9\u6811","slug":"\u4E8C\u53C9\u6811"},{"level":3,"title":"\u4E8C\u53C9\u6811\u7684\u904D\u5386","slug":"\u4E8C\u53C9\u6811\u7684\u904D\u5386"},{"level":3,"title":"\u54C8\u592B\u66FC\u6811(Huffman)","slug":"\u54C8\u592B\u66FC\u6811-huffman"},{"level":2,"title":"\u591A\u53C9\u6811","slug":"\u591A\u53C9\u6811"},{"level":2,"title":"\u68EE\u6797","slug":"\u68EE\u6797"}],"relativePath":"algorithm/data/03-\u6811.md","lastUpdated":1657084793000}',t={},e=p(`<h1 id="\u6811" tabindex="-1">\u6811 <a class="header-anchor" href="#\u6811" aria-hidden="true">#</a></h1><h2 id="\u4E8C\u53C9\u6811" tabindex="-1">\u4E8C\u53C9\u6811 <a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h2><h3 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386" tabindex="-1">\u4E8C\u53C9\u6811\u7684\u904D\u5386 <a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386" aria-hidden="true">#</a></h3><p>\u4E8C\u53C9\u6811\u662F\u4E00\u79CD\u91CD\u8981\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5F88\u591A\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u90FD\u662F\u57FA\u4E8E\u4E8C\u53C9\u6811\u7684\u57FA\u7840\u6F14\u53D8\u800C\u6765\u7684\u3002\u5BF9\u4E8E\u4E8C\u53C9\u6811\uFF0C\u6709\u6DF1\u5EA6\u904D\u5386\u548C\u5E7F\u5EA6\u904D\u5386\u3002</p><p>\u7531\u4E8E\u6811\u7684\u5B9A\u4E49\u672C\u8EAB\u5C31\u662F\u9012\u5F52\u5B9A\u4E49\uFF0C\u56E0\u6B64\u91C7\u7528\u9012\u5F52\u7684\u65B9\u6CD5\u53BB\u5B9E\u73B0\u6811\u7684\u4E09\u79CD\u904D\u5386\u4E0D\u4EC5\u5BB9\u6613\u7406\u89E3\u800C\u4E14\u4EE3\u7801\u7B80\u6D01\u3002</p><p>\u6DF1\u5EA6\u904D\u5386\uFF1A</p><ul><li>\u524D\u5E8F\u904D\u5386</li><li>\u4E2D\u5E8F\u904D\u5386</li><li>\u540E\u7EED\u904D\u5386</li></ul><p>\u5E7F\u5EA6\u904D\u5386\uFF1A</p><ul><li>\u53EA\u9700\u6309\u5C42\u6B21\u904D\u5386\u5373\u53EF</li></ul><p>\u4F8B\uFF1A<br> \u5BF9\u4E8E\u8FD9\u6837\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF1A</p><p>graph TD;</p><p>1((1))--&gt;2((2))--&gt;4((4)); 1((1))--&gt;3((3))--&gt;6((6));</p><p>2((2))--&gt;5((5))--&gt;7((7)); 5((5))--&gt;8((8));</p><p>\u4E0B\u9762\u9010\u4E2A\u4ECB\u7ECD\u5176\u904D\u5386\u65B9\u5F0F</p><h4 id="\u524D\u5E8F\u904D\u5386" tabindex="-1">\u524D\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u524D\u5E8F\u904D\u5386" aria-hidden="true">#</a></h4><div class="language-mermaid line-numbers-mode"><pre><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>

1<span class="token text string">((root))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((left))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((right))</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5373\u5148\u904D\u5386\u6839\u8282\u70B9\uFF0C\u518D\u904D\u5386\u5DE6\u6811\uFF0C\u53F3\u6811</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><pre><code><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> u <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u7ED3\u679C\uFF1A<code>1 2 4 5 7 8 3 6</code></p><h4 id="\u4E2D\u5E8F\u904D\u5386" tabindex="-1">\u4E2D\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a></h4><div class="language-mermaid line-numbers-mode"><pre><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>

1<span class="token text string">((left))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((root))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((right))</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5373\u5148\u904D\u5386\u5DE6\u6811\uFF0C\u518D\u904D\u5386\u6839\u8282\u70B9\uFF0C\u53F3\u6811</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><pre><code><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> u <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u7ED3\u679C\uFF1B<code>4 2 7 5 8 1 6 3</code></p><h4 id="\u540E\u5E8F\u904D\u5386" tabindex="-1">\u540E\u5E8F\u904D\u5386 <a class="header-anchor" href="#\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a></h4><div class="language-mermaid line-numbers-mode"><pre><code>
<span class="token keyword">graph</span> LR<span class="token punctuation">;</span>

1<span class="token text string">((left))</span><span class="token arrow operator">--&gt;</span>2<span class="token text string">((right))</span><span class="token arrow operator">--&gt;</span>3<span class="token text string">((root))</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5373\u5148\u904D\u5386\u5DE6\u6811\uFF0C\u518D\u904D\u5386\u53F3\u6811\uFF0C\u6839\u8282\u70B9</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><pre><code><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> u <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7ED3\u679C\uFF1A<code>4 7 8 5 2 6 3 1</code></p><h4 id="\u5C42\u6B21\u904D\u5386" tabindex="-1">\u5C42\u6B21\u904D\u5386 <a class="header-anchor" href="#\u5C42\u6B21\u904D\u5386" aria-hidden="true">#</a></h4><p>\u4ECE\u4E0A\u5230\u4E0B\u4E00\u5C42\u5C42\u904D\u5386</p><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><pre><code><span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> q<span class="token punctuation">;</span>

    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> t <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> l <span class="token operator">=</span> v<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span> r <span class="token operator">=</span> v<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span>

        cout <span class="token operator">&lt;&lt;</span> t <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>l<span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u7ED3\u679C\uFF1A<code>1 2 3 4 5 6 7 8</code></p><h3 id="\u54C8\u592B\u66FC\u6811-huffman" tabindex="-1">\u54C8\u592B\u66FC\u6811(Huffman) <a class="header-anchor" href="#\u54C8\u592B\u66FC\u6811-huffman" aria-hidden="true">#</a></h3><p>\u2003\u2003\u970D\u592B\u66FC\u7F16\u7801\uFF08Huffman Coding\uFF09\uFF0C\u53C8\u8BD1\u4E3A\u54C8\u592B\u66FC\u7F16\u7801\u3001\u8D6B\u592B\u66FC\u7F16\u7801\uFF0C\u662F\u4E00\u79CD\u7528\u4E8E\u65E0\u635F\u6570\u636E\u538B\u7F29\u7684\u71B5\u7F16\u7801\uFF08\u6743\u7F16\u7801\uFF09\u7B97\u6CD5\u3002</p><p>\u2003\u2003\u4E3A\u4E86\u538B\u7F29\u5B57\u7B26\u4E32\u4F20\u8F93\u6210\u672C\uFF0C\u7528\u8D2A\u5FC3\u7684\u601D\u8DEF\uFF0C\u5C06\u4F7F\u7528\u4E0D\u9891\u7E41\u7684\u5B57\u7B26\u7528\u8F83\u957F\u7684\u4E8C\u8FDB\u5236\u6570\u8868\u793A\uFF0C\u5E38\u7528\u7684\u5B57\u7B26\u7528\u8F83\u77ED\u7684\u4E8C\u8FDB\u5236\u6570\u8868\u793A\uFF0C\u4ECE\u800C\u8FBE\u5230\u51CF\u5C11\u4E8C\u8FDB\u5236\u4F7F\u7528\uFF0C\u964D\u4F4E\u4F20\u8F93\u6210\u672C\u7684\u76EE\u7684\u3002</p><p>\u7531\u6B64\u9009\u62E9\u5143\u7D20\u987A\u5E8F\u5EFA\u6210\u7684\u4E8C\u53C9\u6811\u79F0\u4E3A Huffman Tree</p><p><img src="https://user-images.githubusercontent.com/94043894/172993543-36197e46-9146-4ed5-b815-f854cf811206.png" alt=""></p><h4 id="\u5EFA\u6811" tabindex="-1">\u5EFA\u6811 <a class="header-anchor" href="#\u5EFA\u6811" aria-hidden="true">#</a></h4><mark> \u57FA\u672C\u601D\u8DEF\uFF1A\u6743\u503C\u9AD8\u7684\u53F6\u8282\u70B9\u9760\u8FD1\u6839\u8282\u70B9\uFF0C\u6743\u503C\u4F4E\u7684\u53F6\u8282\u70B9\u8FDC\u79BB\u6839\u8282\u70B9 </mark><p>\u6B65\u9AA4\uFF1A</p><ol><li>\u6392\u5E8F</li><li>\u6743\u503C\u5C0F\u7684\u8282\u70B9\u4F18\u5148\u5408\u5E76\u4E3A\u4E00\u4E2A\u8282\u70B9</li></ol><p>\u91CD\u590D\u4E24\u4E2A\u6B65\u9AA4\uFF0C\u76F4\u5230\u53EA\u5269\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u8BE5\u8282\u70B9\u5C31\u662F\u6839\u8282\u70B9\uFF0C\u6CBF\u5408\u5E76\u8282\u70B9\u7684\u987A\u5E8F\u8FD4\u56DE\u5C31\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A Huffman Tree</p><h2 id="\u591A\u53C9\u6811" tabindex="-1">\u591A\u53C9\u6811 <a class="header-anchor" href="#\u591A\u53C9\u6811" aria-hidden="true">#</a></h2><h2 id="\u68EE\u6797" tabindex="-1">\u68EE\u6797 <a class="header-anchor" href="#\u68EE\u6797" aria-hidden="true">#</a></h2>`,49),o=[e];function c(l,u,r,i,k,d){return a(),s("div",null,o)}var h=n(t,[["render",c]]);export{m as __pageData,h as default};

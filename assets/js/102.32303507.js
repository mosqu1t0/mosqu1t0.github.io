(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{369:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js-note"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-note"}},[t._v("#")]),t._v(" JS NOTE")]),t._v(" "),s("h2",{attrs:{id:"知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),s("ol",[s("li",[t._v("js 是解释型的高级语言")])]),t._v(" "),s("h3",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("js 中严格区分大小写")])]),t._v(" "),s("li",[s("p",[t._v("js 中每一条语句以分号"),s("code",[t._v(";")]),t._v("结尾")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果不写分号，浏览器会自动添加，但是会消耗一些系统资源，而且有些时候，浏览器会加错分号，所以在开发中分号必须有\n")])])])]),t._v(" "),s("li",[s("p",[t._v("js 会忽略多个空格和换行，所以可以根据空格和换行对代码进行格式化")])])]),t._v(" "),s("h3",{attrs:{id:"变量类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[t._v("#")]),t._v(" 变量类型")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Number")])]),t._v(" "),s("li",[s("p",[t._v("String")])]),t._v(" "),s("li",[s("p",[t._v("Boolean")])]),t._v(" "),s("li",[s("p",[t._v("Null")])]),t._v(" "),s("li",[s("p",[t._v("Undefined")])]),t._v(" "),s("li",[s("p",[t._v("Object")])])]),t._v(" "),s("h4",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("整数")])]),t._v(" "),s("li",[s("p",[t._v("浮点数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Js 的浮点数误差大，不要使用浮点数运算\n")])])])]),t._v(" "),s("li",[s("p",[t._v("NaN（Not a Number 的缩写），任何值和 NaN 计算都会得到 NaN")])]),t._v(" "),s("li",[s("p",[t._v("Infinity 表示正无穷，-Infinity 表示负无穷")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("0x")]),t._v("开头使用 16 进制的数字")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("0")]),t._v("开头使用 8 进制数字")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("0b")]),t._v("开头表示二进制的数字")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("兼容性很差，不同浏览器支持不同\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"070"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不同的浏览器解析结果不同，有 70 有 56 ")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parserInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以使用第二个参数取对应的进制数")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[t._v("#")]),t._v(" Null")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("空的对象\n")])])]),s("h4",{attrs:{id:"undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" Undefined")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Null 和 Undefined 是没有方法的\n")])])]),s("blockquote",[s("p",[t._v("小技巧，变量没定义浏览器会报错，属性没定义浏览器只会返回 undefined，可以用 window.xx 的方式写一个兼容浏览器的函数")])]),t._v(" "),s("h1",{attrs:{id:"对象-方法-函数-包装类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象-方法-函数-包装类"}},[t._v("#")]),t._v(" 对象&方法&函数&包装类")]),t._v(" "),s("ul",[s("li",[t._v("在 script 标签（全局作用域）中创建的变量和函数默认设为 window 的属性和方法")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("var")]),t._v("关键字定义变量，会在头部先声明，在该行再赋值")]),t._v(" "),s("li",[t._v("大部分的方法都不会对原对象造成修改")]),t._v(" "),s("li",[t._v("js 对象分为 3 类，内建对象，宿主对象，自定义对象")])]),t._v(" "),s("p",[s("strong",[t._v("xxx.hasOwnProperty")]),t._v("()")]),t._v(" "),s("p",[t._v("​\t寻找对象自身中是否含有某属性或方法")]),t._v(" "),s("p",[s("strong",[t._v("xxx.toString")]),t._v("()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Null 和 Underfined 没有该方法 无法使用")]),t._v("\n")])])]),s("p",[s("strong",[t._v("String")]),t._v("()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Number")]),t._v("()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("字符串为纯数字，直接转换为数字")]),t._v(" "),s("li",[t._v("字符串为非数字，转换为 NaN")]),t._v(" "),s("li",[t._v("字符串为空串或有很多空格，转换为 0")]),t._v(" "),s("li",[t._v("布尔 True 转换为 1，False 转换为 0")]),t._v(" "),s("li",[t._v("Null 转换为 0")]),t._v(" "),s("li",[t._v("Undefined 转换 为 NaN")])]),t._v(" "),s("p",[s("strong",[t._v("parseInt")]),t._v("()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123.23px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//输出"123"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可用间接于取整")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出“123”")]),t._v("\n\n\n")])])]),s("ul",[s("li",[t._v("会将字符串中有效的整数内容提取出来")]),t._v(" "),s("li",[t._v("可以使用第二个参数提取不同的进制数")])]),t._v(" "),s("p",[s("strong",[t._v("parseFloat")]),t._v("()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123.23px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//输出"123.23"')]),t._v("\n")])])]),s("ul",[s("li",[t._v("会将字符串中有效的浮点数内容提取出来")])]),t._v(" "),s("p",[t._v("如果对非 String 使用 parseInt() 或 parseFloat() 会先将其转换为字符串再提取")]),t._v(" "),s("p",[s("strong",[t._v("Boolean")]),t._v("()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//True")]),t._v("\n")])])]),s("ul",[s("li",[t._v("数字中除了 0 和 NaN 其余的都会转换为 True")]),t._v(" "),s("li",[t._v("字符串中除了空串，其余的都会转换为 True")]),t._v(" "),s("li",[t._v("null 和 undefined 都会转换为 false")]),t._v(" "),s("li",[t._v("对象也会转换为 True")])]),t._v(" "),s("blockquote",[s("p",[t._v("使用 xxx 属性 in xx 对象 来判断在对象中是否存在属性")])]),t._v(" "),s("h2",{attrs:{id:"函数创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数创建"}},[t._v("#")]),t._v(" 函数创建")]),t._v(" "),s("p",[t._v("注：函数也是对象，对象能干的事，函数都能干")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数表达式\t\t后面的函数为匿名函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" fun2 （）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fun3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数对象（少用）")]),t._v("\n")])])]),s("ol",[s("li",[s("p",[t._v("使用函数表达式定义函数，默认会先在头部声明该函数，而不赋值，直到执行到该行才赋值（和普通变量一样）")])]),t._v(" "),s("li",[s("p",[t._v("使用函数声明定义函数，默认将提前到在 script 标签的头部声明定义函数")])])]),t._v(" "),s("p",[t._v("参数")]),t._v(" "),s("ol",[s("li",[t._v("定义形参就相当于在函数中定义了一个变量")]),t._v(" "),s("li",[t._v("函数的实参可以是任意的类型\n"),s("ul",[s("li",[t._v("如果实参为函数，加括号表示传入的是该函数的返回值")]),t._v(" "),s("li",[t._v("如果实参为函数，不加括号表示传入的是该函数对象")])])]),t._v(" "),s("li",[t._v("解析器不会检测参数的类型")]),t._v(" "),s("li",[t._v("解析器不会检测参数的数量\n"),s("ul",[s("li",[t._v("多余的参数不会被赋值")]),t._v(" "),s("li",[t._v("实参不足，形参会赋值为 undefined")])])])]),t._v(" "),s("p",[t._v("​\t在调用函数时，浏览器每次都会传递进两个隐含的参数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("\t1. 函数上下文对象 this\n\t2. 封装实参的对象 arguments\n   - arguments 是一个类数组对象， 即它也可以通过索引来操作数据， 也可以获取长度\n   - 在调用函数时，我们所传递的实参都会在 arguments 中保存\n   - 即使不定义形参，也可以通过 arguments 来访问实参\n   - 它的 callee 属性，对应一个函数对象，就是当前正在指向的函数的对象\n")])])]),s("p",[t._v("返回值")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("返回值可以返回任意类型")]),t._v(" "),s("ul",[s("li",[t._v("包含函数的返回值和函数对象本身")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fun2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回的是一个函数对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//讲返回的函数执行了")]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用括号扩起表示一个整体，不会报错")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行这个函数")]),t._v("\n")])])]),s("p",[s("strong",[t._v("this")])]),t._v(" "),s("ol",[s("li",[t._v("隐含参数 this 指向的是一个对象")]),t._v(" "),s("li",[t._v("这个对象我们称为函数执行的上下文对象")]),t._v(" "),s("li",[t._v("根据函数调用方式的不同，this 会指向不同的对象\n"),s("ul",[s("li",[t._v("以函数的方法调用时，this 永远都是 window")]),t._v(" "),s("li",[t._v("以方法的形式调用时， this 就是调用方法的那个对象")]),t._v(" "),s("li",[t._v("以构造函数的形式调用时，this 是新创建的那个对象")]),t._v(" "),s("li",[t._v("使用 call 和 apply 调用时， this 是指定的那个对象")])])])]),t._v(" "),s("p",[s("strong",[t._v(".call && .apply")])]),t._v(" "),s("ul",[s("li",[t._v("都是函数对象的方法，需要通过函数对象来调用")]),t._v(" "),s("li",[t._v("当对函数调用 call()和 apply()都会调用函数执行")]),t._v(" "),s("li",[t._v("在调用 call() 和 apply() 可以将 一个对象指定为第一个参数\n"),s("ul",[s("li",[t._v("此时这个对象将会成为函数执行的 this")])])]),t._v(" "),s("li",[t._v("call()方法可以将实参在对象之后依次传递")]),t._v(" "),s("li",[t._v("apply()方法需要将实参封装到一个数组中统一传递")])]),t._v(" "),s("h2",{attrs:{id:"对象创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象创建"}},[t._v("#")]),t._v(" 对象创建")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("采用工厂方法创建对象（构造函数 Object 创建的对象都是 Object 这个类型，难以区分多种不同类型的对象）")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreatPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gendre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreatPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"haung"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("构造函数")]),t._v(" "),s("ul",[s("li",[t._v("使用同一个构造函数创建的对象，我们称为一类对象，将一个构造函数称为一个类")]),t._v(" "),s("li",[t._v("创建的对象称为该类的实例（使用 instanceof 检查对象是否为类的实例 "),s("code",[t._v("对象 instanceof 构造函数")]),t._v("）\n"),s("ul",[s("li",[t._v("所有的对象都是 Obeject 的实例（后代）")])])]),t._v(" "),s("li",[t._v("构造函数和普通函数的区别是调用方法的不同")]),t._v(" "),s("li",[t._v("普通函数直接调用，而构造函数需要使用 new 关键字来调用")]),t._v(" "),s("li",[t._v("对象中"),s("code",[t._v("constructor")]),t._v(" 属性是对创建该对象的函数的引用")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行流程")]),t._v(" "),s("ol",[s("li",[t._v("立刻创建新对象")]),t._v(" "),s("li",[t._v("将新建的对象设置为函数中的 this， 在构造函数中可以使用 this 来引用新建的对象")]),t._v(" "),s("li",[t._v("逐行执行函数中的代码")]),t._v(" "),s("li",[t._v("将新建的对象作为返回值返回")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("对象除了可以使用"),s("code",[t._v("对象.属性名")]),t._v("的方式访问属性，还可以通过"),s("code",[t._v('对象["属性名"]的方式访问属性')])])]),t._v(" "),s("h3",{attrs:{id:"给对象添加方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给对象添加方法"}},[t._v("#")]),t._v(" 给对象添加方法")]),t._v(" "),s("h4",{attrs:{id:"原型对象-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型对象-prototype"}},[t._v("#")]),t._v(" 原型对象 prototype")]),t._v(" "),s("p",[t._v("同个类的实例都有指向同一个 prototype 的对象，把方法定义在原型对象中，可以避免多次定义函数")]),t._v(" "),s("ol",[s("li",[t._v("当一个实例对象访问一个属性， 方法， 对象时会优先检查该实例中有没有定义，再去检测"),s("code",[t._v("__proto__")]),t._v("中有没有定义")]),t._v(" "),s("li",[t._v("原型对象也隐含有原型对象，并且浏览器只带的一些方法定义在其中例如"),s("code",[t._v("toString()")])])]),t._v(" "),s("h2",{attrs:{id:"数组创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组创建"}},[t._v("#")]),t._v(" 数组创建")]),t._v(" "),s("ol",[s("li",[t._v("js 的数组和函数都属于一种对象")]),t._v(" "),s("li",[t._v("各种类型的值都可以存放进同一个数组")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最常用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("方法到 w3school 查询")]),t._v(" "),s("h2",{attrs:{id:"date-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date-对象"}},[t._v("#")]),t._v(" Date 对象")]),t._v(" "),s("p",[t._v("使用 Date 对象来表示一个时间")]),t._v(" "),s("p",[t._v(".getDate 获取当前时间")]),t._v(" "),s("p",[t._v("其他方法查 w3s")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("直接使用构造函数创建一个 Date 对象， 则会封装为当前代码执行的时间")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"01/01/2022 20:35:30"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("需要在构造函数中传递一个表示时间的字符串作为参数，格式："),s("code",[t._v("月份/日/年 时：分：秒")])]),t._v(" "),s("h2",{attrs:{id:"math-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math-对象"}},[t._v("#")]),t._v(" Math 对象")]),t._v(" "),s("ol",[s("li",[t._v("无法使用"),s("code",[t._v("new Math()")]),t._v("来创建对象，它不是一个构造函数，只是一个对象")]),t._v(" "),s("li",[t._v("Math 中提供有非常多的数学方法使用（w3c 查看）")])]),t._v(" "),s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("和 c 语言一样 js 的字符串是以字符数组的形式保存的，可以直接使用下标访问字符")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回字符串指定位置的字符")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回字符串指定位置字符的 unicode 编码")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25525")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 unicode 对应的字符")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用来连接两个或者多个字符串")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检索字符串中是否含有字符串，含有该内容返回第一次出现的索引，否则返回-1 第二个参数为查找开始的位置索引")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndexOfl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//和 indexOf 一样，但它是从后往前找")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以从字符串中截取指定的内容，第一个参数为开始位置的索引（包含），第二个参数为结束位置的索引（不包含）,如果省略第二个参数，则截取到后面所有的，传递负数为参数，会从后面开始计算")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以截取一个字符串，和 slice 类似，该方法不能接受负数，默认负数为 0，还好自动交换参数位置，若第一个参数大于第二个，则自动交换")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一个参数为截取开始位置的索引，第二个参数为截取长度 *ECMAscript 未对其标准化，使用请小心")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以将字符串拆分为一个数组，以字符串为参数去拆分成数组，若参数为空，则将字符串每个字符拆分数组元素")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将字符串转换为大些返回对应的有 toLowerCase()")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//搜索到指定内容，则会返回第一次出现的索引，如果没有搜索到返回-1，可以接受一个正则表达式作为参数，但是只能查找第一个，即使设置全局模式也只能查找第一个")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以根据正则表达式，从一个字符串中将符合条件的内容提取出来，返回数组")]),t._v("\nstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"acd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以将字符串中指定内容替换为新的内容，第一个参数为被替换的内容，第二个参数为新的内容，默认只替换第一个。可以接受正则表达式")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("p",[t._v("查找匹配字符串的规则")]),t._v(" "),s("h4",{attrs:{id:"模板和语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板和语法"}},[t._v("#")]),t._v(" 模板和语法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("正则表达式"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 匹配模式\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字面量，难以修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用构造函数创建正则表达对象，该方法更灵活，参数能修改为变量")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表达式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a|b")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配 a 或者 b， | 表示或")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[ab]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配 a 或者 b， [] 表示或，[a-z]匹配任意小写字母，[A-Z]匹配任意大写字母，[A-z]表示匹配任意字母，[0-9]匹配任意数字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a[bde]c")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配 abc,adc,aec ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[^ab]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配除了 ab 以外的字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//量词")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a{3}")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配连续 3 个 a")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(ab){3}")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{n}为量词，表示匹配连续出现 n 个 ab")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("b{1,3}")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示匹配连续的 1 到 3 个 b")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("b{3,}")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示匹配连续的 3 个以上的 b")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("b+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配至少 1 个连续的 b，相当于 b{1,}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("b*")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配 0 个或者多个 b，相当于 b{0,}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("b?")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配 0 个或 1 个 b，相当于 b{0,1}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^a")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配以 a 开头")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配以 a 结尾")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^a$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果在正则表达式中同时使用^$则要求字符串必须完全符合正则表达式，表示匹配单个字母 a")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^a|a$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配以 a 开头，或以 a 结尾的字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^a.*a$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配以 a 开头，且以 a 结尾的字符串")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//i 为 ignore，表示忽略大小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//g 为 globle，表示全局匹配，所有符合的都匹配")]),t._v("\n")])])]),s("p",[t._v("可以为一个正则表达式设置多个匹配模式，没有顺序要求")]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v("表示任意字符"),s("code",[t._v(".")]),t._v("若要检查"),s("code",[t._v(".")]),t._v("字符要用 "),s("code",[t._v("\\")]),t._v("转义，即"),s("code",[t._v("\\.")]),t._v("，同理要用"),s("code",[t._v("\\\\")]),t._v("表示检查"),s("code",[t._v("\\")])]),t._v(" "),s("p",[t._v("注意：使用正则表达构造函数时，由于它的参数是一个字符串，而"),s("code",[t._v("\\")]),t._v("是字符串中的转义字符，如果要使用"),s("code",[t._v("\\")]),t._v("来转义，需要写"),s("code",[t._v("\\\\")]),t._v("，即")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示匹配 . 字符，原本需要用一个、转义即可，但是字符串中、表示转义，因此还需要使用一个、给、转义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//而字面量就不需要，因为不是字符串")]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \\w 任意字母，_，数字\t\t\t[A-z_0-9]\tword\n* \\W 除了字母，_，数字的任意字符\t[^A-z_0-9]\n* \\d 任意数字\t\t\t\t[0-9]\t\t\tdigital or dex\n* \\D 除了数字任意字符\t\t\t[^0-9]\n* \\s 空格\t\t\t\t\t\t\t\t\tspace\n* \\S 除了空格\n* \\b 单词边界\t即、bword\\b 表示只独立匹配 word 这个单词\n* \\B 除了单词边界\n*/")]),t._v("\n")])])]),s("h4",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用这个方法可以用来检查一个字符串是否符合正则表达式的规则，返回布尔值")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"字符串实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串实例"}},[t._v("#")]),t._v(" 字符串实例")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1a2b3c4e5d6f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//split 可以传入正则表达式，根据正则表达式拆分元素，返回数组")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello aec world abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a[be]c")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查找 abc，aec\t\t\t\t")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1a2B3ce5d6f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将字母全部提取出来，返回数组")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将字母全部替换为？")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-z]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将字母全部删除")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"          he        llo      "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\s*|\\s*$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除开头和结尾的空格，单词中间的不删除")]),t._v("\n")])])]),s("h4",{attrs:{id:"运用实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运用实例"}},[t._v("#")]),t._v(" 运用实例")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更多的正则表达式可以在网络上找到，但是仅供参考")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*创建一个正则表达式，用来检查一个字符串是否是一个合法的手机号\n*手机号规则：\n*1. 11 位\n*2. 第一位以 1 开头\t^1\n*3. 第二位 3-9 任意数字\t[3-9]\n*4. 三位以后任意数字 9 个 [0-9]{9}$\t\t//$表示 9 位数字后不能跟内容\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" phoneStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"13567890123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" phoneReg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^1[3-9][0-9]{9}$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//以^开头，以$结尾表示完全符合的字符串，即前后不能有内容")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//----------------------------------------------------------------------------------------")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*电子邮件\thello@abc.com.cn\n* 第一个部分（用户名） 任意字母下划线数字 或 任意字母下划线数字.任意字母下划线数字 \\w{3,}(\\.\\w+)*\n* 第二个部分 @\n* 第三个部分（网址名称）  任意字母数字\t\t{A-z0-9}+\n* 第四个部分（后缀）\t.任意字母（2-5 位） 或再加.任意字母（2-5 位）\t(\\.[A-z]{2,5}){1,2}\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc@abc.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" emailReg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\w{3,}(\\.\\w)*@{A-z0-9}+(\\.[A-z]{2,5}){1,2}$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//以^开头，以$结尾表示完全符合的字符串，即前后不能有内容")]),t._v("\n")])])]),s("h2",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("h4",{attrs:{id:"知识点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识点-2"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),s("p",[t._v("全称 Document Object Model 文档对象模型")]),t._v(" "),s("ul",[s("li",[t._v("js 通过 DOM 来对 html 文档进行操作")]),t._v(" "),s("li",[t._v("文档表示的就是整个 html 网页文档")]),t._v(" "),s("li",[t._v("对象表示将网页中的每一个部分都转换为了一个对象去")]),t._v(" "),s("li",[t._v("使用模型来表示与对象之间的关系，方便获取对象")])]),t._v(" "),s("p",[t._v("1.浏览器加载一个页面时，是按照自上而下的顺序加载的，读到一行就执行一行")]),t._v(" "),s("ul",[s("li",[t._v("因此 script 标签尽量写页面的下部或用其他方法，在页面加载完成后在执行\n"),s("ul",[s("li",[t._v("可以为 window 添加 onload 事件响应函数，在页面加载完成后才执行")])])])]),t._v(" "),s("p",[t._v("2.document 中有一个属性 body，它保存 body 的引用")]),t._v(" "),s("p",[t._v("3.document.documentElement 保存的是 html 根标签")]),t._v(" "),s("p",[t._v("4.document.all 代表页面中所有元素")]),t._v(" "),s("h4",{attrs:{id:"document-element"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-element"}},[t._v("#")]),t._v(" (document & Element)")]),t._v(" "),s("h5",{attrs:{id:"dom-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-查询"}},[t._v("#")]),t._v(" dom 查询")]),t._v(" "),s("p",[t._v("通过 document 对象调用，来获取元素节点，元素就是标签")]),t._v(" "),s("p",[s("strong",[t._v("获取元素节点")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("getElementById()")]),t._v(" "),s("ul",[s("li",[t._v("通过"),s("strong",[t._v("id")]),t._v("属性获取"),s("strong",[t._v("一个")]),t._v("元素节点对象")])])]),t._v(" "),s("li",[t._v("getElementsByTagName()\n"),s("ul",[s("li",[t._v("通过"),s("strong",[t._v("标签名")]),t._v("获取"),s("strong",[t._v("一组")]),t._v("元素节点对象")]),t._v(" "),s("li",[t._v("该方法会返回一个类数组对象，所有查询到的元素都会封装到数组中")])])]),t._v(" "),s("li",[s("strong",[t._v("getElementsByName()")]),t._v(" "),s("ul",[s("li",[t._v("通过"),s("strong",[t._v("name")]),t._v("属性获取"),s("strong",[t._v("一组")]),t._v("元素节点对象（name 属性主要是表单项有）")])])]),t._v(" "),s("li",[t._v("getElementsByClassName()\n"),s("ul",[s("li",[t._v("可以根据 class 属性获取元素，IE8 下不支持")])])]),t._v(" "),s("li",[s("strong",[t._v("querySelector()")]),t._v(" "),s("ul",[s("li",[t._v("需要一个选字符串作为参数，可以根据一个"),s("strong",[t._v("CSS 选择器")]),t._v("来查询一个元素节点对象，但只会返回一个元素，当匹配多个时，只返回第一个")])])]),t._v(" "),s("li",[s("strong",[t._v("querySelectorAll()")]),t._v(" "),s("ul",[s("li",[t._v("和用法类似 querySelector()，把结果放入数组，即使只有一个")])])])]),t._v(" "),s("ul",[s("li",[t._v("元素节点通过**innerHTML()**方法获取内部的 html 代码，对自结束标签没有作用")]),t._v(" "),s("li",[t._v("元素节点通过 innerText()获取到元素内部的文本内容，它会自动将 html 标签去除")]),t._v(" "),s("li",[t._v("元素节点通过 nodeValue()获取文本节点")]),t._v(" "),s("li",[t._v("直接使用"),s("code",[t._v("元素.属性名")]),t._v("读取元素节点属性，特别的，读取 class 属性要使用 className")])]),t._v(" "),s("p",[s("strong",[t._v("获取元素子节点")])]),t._v(" "),s("ol",[s("li",[t._v("getElementsByTagName()\n"),s("ul",[s("li",[t._v("返回当前元素的指定标签后代节点")])])]),t._v(" "),s("li",[t._v("childNodes()\n"),s("ul",[s("li",[t._v("表示当前元素的所有子节点，包括文本节点，空白部分也会被当成文本节点（IE8 及以下的浏览器除外）")])])]),t._v(" "),s("li",[s("strong",[t._v("children()")]),t._v(" "),s("ul",[s("li",[t._v("可以获取当前元素的所有子元素")])])]),t._v(" "),s("li",[t._v("firstChild()\n"),s("ul",[s("li",[t._v("当前元素的第一个子节点，包括空白文本节点")])])]),t._v(" "),s("li",[t._v("firstElementChild()\n"),s("ul",[s("li",[t._v("获取当前元素的第一个子元素，不支持 IE8 及以下浏览器")])])]),t._v(" "),s("li",[t._v("lastChild()\n"),s("ul",[s("li",[t._v("当前元素的最后一个节点")])])])]),t._v(" "),s("p",[s("strong",[t._v("获取父节点和兄弟节点")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("parentNode")]),t._v(" "),s("ul",[s("li",[t._v("获取当前节点的父节点")])])]),t._v(" "),s("li",[t._v("previousSibling\n"),s("ul",[s("li",[t._v("获取当前节点的前一个兄弟节点（也可能获取空白节点）")])])]),t._v(" "),s("li",[t._v("previousElementSibling;\n"),s("ul",[s("li",[t._v("取前一个兄弟元素(IE8 以下不支持   )")])])]),t._v(" "),s("li",[t._v("nextSibling\n"),s("ul",[s("li",[t._v("获取当前节点的下一个兄弟 节点")])])])]),t._v(" "),s("h5",{attrs:{id:"dom-修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-修改"}},[t._v("#")]),t._v(" dom 修改")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("appendChild()")]),t._v(" "),s("ul",[s("li",[t._v("添加新的子节点到指定节点")])])]),t._v(" "),s("li",[s("strong",[t._v("removeChild()")]),t._v(" "),s("ul",[s("li",[t._v("删除子节点，调用为父节点")])])]),t._v(" "),s("li",[t._v("replaceChild(newnode,refnode)\n"),s("ul",[s("li",[t._v("替换子节点，调用为父节点")])])]),t._v(" "),s("li",[s("strong",[t._v("insertBefore(newnode,refnode)")]),t._v(" "),s("ul",[s("li",[t._v("指定的子节点前面插入新的子节点，调用为父节点")])])]),t._v(" "),s("li",[s("strong",[t._v("createElement()")]),t._v(" "),s("ul",[s("li",[t._v("创建元素节点，参数为标签名字符串")])])]),t._v(" "),s("li",[s("strong",[t._v("createTextNode()")]),t._v(" "),s("ul",[s("li",[t._v("创建文本节点")])])]),t._v(" "),s("li",[t._v("innerHTML()\n"),s("ul",[s("li",[t._v("可以使用 innerHTML()给节点添加子节点")])])])]),t._v(" "),s("h4",{attrs:{id:"修改样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改样式"}},[t._v("#")]),t._v(" 修改样式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("内联样式（含有较高的优先级，优先执行）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("js 修改 css 样式，通过 "),s("code",[t._v("元素.style.样式名 = 样式值")]),t._v("（样式值为字符串）")])]),t._v(" "),s("li",[s("p",[t._v("css 含有"),s("code",[t._v("-")]),t._v("的样式名在 js 中不合法，需要去掉"),s("code",[t._v("-")]),t._v("使用驼峰命名法")])])])]),t._v(" "),s("li",[s("p",[t._v("当前样式")]),t._v(" "),s("ol",[s("li",[t._v("使用"),s("code",[t._v("元素.currentStyle.样式名 = 样式值")]),t._v("来元素读取的当前样式，只读无法修改（只有 IE 浏览器支持，其他的都不支持）")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("getComputedStyle（元素名，伪元素或 null）")]),t._v("来获取元素的当前样式真实值，window 的方法，它会返回一个封装着当前元素对应的样式的对象，只读无法修改（IE8 及以下不支持）")])])])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("注意")])]),t._v("：如果样式中写了"),s("code",[t._v("!important")]),t._v("，则该样式的优先级别最高，js 修改的内联样式也 无法覆盖")])]),t._v(" "),s("h4",{attrs:{id:"元素相关属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素相关属性"}},[t._v("#")]),t._v(" 元素相关属性")]),t._v(" "),s("ol",[s("li",[t._v("clienHeight() 和 clienWidth()\n"),s("ul",[s("li",[t._v("返回内容的宽度和高度（没有 px，是只读的），包括内容区和内边距")])])]),t._v(" "),s("li",[t._v("offsetWidth() 和 offsetHeight()\n"),s("ul",[s("li",[t._v("获取元素的宽度和高度（没有 px，是只读的），包括内容区，内边距和外边距")])])]),t._v(" "),s("li",[t._v("offsetParent()\n"),s("ul",[s("li",[t._v("获取元素的定位父元素，即离该元素最近的开启定位的父元素")])])]),t._v(" "),s("li",[t._v("offsetLeft() 和 offsetTop()\n"),s("ul",[s("li",[t._v("当前元素相对于其定位父元素的水平偏移量和垂直偏移量")])])]),t._v(" "),s("li",[t._v("scrollHeight() 和 scrollWidth()\n"),s("ul",[s("li",[t._v("可滚动滚动区域的高度和宽度")])])]),t._v(" "),s("li",[t._v("scrollLeft()\n"),s("ul",[s("li",[t._v("水平滚动条移动的距离")])])]),t._v(" "),s("li",[t._v("scrollTop()\n"),s("ul",[s("li",[t._v("垂直滚动条移动的距离")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("当满足 scrollTop() - scrollHeight() == clienHeight() 表示滚动条滚到底了")])]),t._v(" "),s("h4",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),s("ul",[s("li",[t._v("文档或浏览器窗口中发生的一些特定的交互瞬间")]),t._v(" "),s("li",[t._v("js 与 html 之间的交互是通过事件实现的\n"),s("ul",[s("li",[t._v("比如说点击，刷新，改变窗口大小之类的")])])])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("//直接在标签上添加事件属性\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("butten")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("btn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token value javascript language-javascript"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'helloworld'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("btn"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//js 中获取对象后，绑定事件，该函数称为单击响应函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbtn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("例子")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("oninput 输入")])]),t._v(" "),s("li",[s("p",[t._v("oninvalid 表单验证错误 onchange 输入改变时")])]),t._v(" "),s("li",[s("p",[t._v("onmousewheel 鼠标滚轮滚动事件")])]),t._v(" "),s("li",[s("p",[t._v("键盘事件一般绑定可以获取焦点的对象或者 document")]),t._v(" "),s("ul",[s("li",[t._v("onkeydown 和 onkeyup\n"),s("ul",[s("li",[t._v("onkeydown 可连续触发，当第一次触发和第二次触发之间的时间间隙较长防止误操作")])])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("火狐中需要使用 DOMMouseScroll 来绑定滚动事件，该事件要使用 addEventlistener()来绑定")])]),t._v(" "),s("h5",{attrs:{id:"事件对象-dom-event"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件对象-dom-event"}},[t._v("#")]),t._v(" 事件对象(dom event)")]),t._v(" "),s("ol",[s("li",[t._v("当事件的相应函数被触发时，浏览器每次都会将一个事件对象作为实参传递进响应函数")]),t._v(" "),s("li",[t._v("在事件对象中封装了当前事件的一切信息，比如哪个按键被按下，鼠标的坐标等等")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//例子")]),t._v("\nxxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmousemove")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取鼠标的坐标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v(".clientX 和 .clientY")]),t._v(" "),s("ul",[s("li",[t._v("表示鼠标在可视窗口内的坐标")])])]),t._v(" "),s("li",[s("p",[t._v(".pageX 和 .pageY（IE8 中不支持）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("表示鼠标相对于页面的坐标")])]),t._v(" "),s("li",[s("p",[t._v("可以用 .clientX + scrollTop() 表示 .pageX")])])])]),t._v(" "),s("li",[s("p",[t._v("event 中的 target 表示触发事件的对象")])]),t._v(" "),s("li",[s("p",[t._v("event 中 wheelDelta() 获取鼠标滚动方向")]),t._v(" "),s("ul",[s("li",[t._v("只看正负不看大小")]),t._v(" "),s("li",[t._v("火狐不支持，需要使用 event.detail，只看正负不看大小")])])]),t._v(" "),s("li",[s("p",[t._v("可以使用 keyCode 获取按键的编码")]),t._v(" "),s("ul",[s("li",[t._v("特殊按键还可以使用 ctrlKey 等等")])])])]),t._v(" "),s("blockquote",[s("p",[s("em",[s("strong",[t._v("注意")])]),t._v("：IE8 中，响应函数被触发时，浏览器不会传递事件对象，在 IE8 及以下的浏览器中，是将事件对象作为 window 对象的属性保存的，因此使用 event = event || window.event ；解决兼容性问题是个好方法")])]),t._v(" "),s("h5",{attrs:{id:"事件冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡"}},[t._v("#")]),t._v(" 事件冒泡")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("所谓事件冒泡指的就是事件向上传导，当后代元素上的事件被触发时，其"),s("strong",[t._v("祖先元素")]),t._v("的"),s("strong",[t._v("相同事件")]),t._v("也会被触发")])]),t._v(" "),s("li",[s("p",[t._v("在开发中大部分情况冒泡都是有用的，如果不希望发生事件冒泡可以通过"),s("strong",[t._v("事件对象来")]),t._v("取消冒泡")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("btn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cancelBubble "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意，只在该处取消，其较近的祖先元素被取消，较远的祖先元素的冒泡尚未取消")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h5",{attrs:{id:"事件委派"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件委派"}},[t._v("#")]),t._v(" 事件委派")]),t._v(" "),s("ul",[s("li",[t._v("将事件统一绑定给元素的共同的祖先元素，这样当后代元素上的事件触发时，会一直冒泡到祖先元素，从而通过祖先元素的响应函数来处理事件")]),t._v(" "),s("li",[t._v("事件委派是利用了冒泡，通过委派事件减少了事件的绑定")])]),t._v(" "),s("h5",{attrs:{id:"事件绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定"}},[t._v("#")]),t._v(" 事件绑定")]),t._v(" "),s("ol",[s("li",[t._v("使用"),s("code",[t._v("对象.事件 = 函数")]),t._v("的形式绑定响应函数，只能同时为一个元素绑定一个响应函数，第二次绑定会覆盖掉之前绑定的函数")]),t._v(" "),s("li",[s("code",[t._v('对象.addEventListener("click",function，false)')]),t._v("，可以同时为一个元素相同事件绑定多个函数，按照绑定顺序执行（IE8 及一下浏览器不支持），参数：\n"),s("ul",[s("li",[t._v("事件的字符串，不要 on")]),t._v(" "),s("li",[t._v("回调函数，当事件触发时该函数会被调用")]),t._v(" "),s("li",[t._v("是否在捕获阶段触发事件，需要一个布尔值，一般为 false")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("在 IE 中可以使用 attachEvent()来绑定事件，参数 1.带 on 的事件字符串；2.函数； 绑定事件的执行顺序是后绑定后执行")]),t._v(" "),s("p",[t._v("addEventListener() 中的 this 是绑定事件的对象，attachEven()中的 this 是 window")]),t._v(" "),s("p",[t._v('可以通过 attachEven("onclick",function(){callback.call(obj);})的方式统一 this 为绑定事件的对象')])]),t._v(" "),s("h5",{attrs:{id:"事件传播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件传播"}},[t._v("#")]),t._v(" 事件传播")]),t._v(" "),s("ul",[s("li",[t._v("微软公司认为事件应该是由内向外执行，先执行当前元素，再执行祖先元素的事件，即冒泡")]),t._v(" "),s("li",[t._v("网景公司认为事件应该是有外向内执行，当事件触发时应该先触发元素外的祖先元素再传入内，即捕获阶段")]),t._v(" "),s("li",[t._v("w3c 综合了两个公司的方案，将事件传播分成了三个阶段\n"),s("ol",[s("li",[t._v("捕获阶段\n"),s("ul",[s("li",[t._v("捕获阶段时，从最外层的祖先元素，向目标元素进行事件的捕获，但是默认此时不会触发事件")])])]),t._v(" "),s("li",[t._v("目标阶段\n"),s("ul",[s("li",[t._v("事件捕获到了目标元素，捕获结束，开始在目标元素上触发事件")])])]),t._v(" "),s("li",[t._v("冒泡阶段\n"),s("ul",[s("li",[t._v("事件从目标元素向他祖先元素传递，依次触发事件")])])])])])]),t._v(" "),s("p",[t._v("如果希望在捕获阶段执行事件，可以将 addEventListener()的第三个参数改为 true")]),t._v(" "),s("p",[t._v("当调用一个元素的 setCapture()方法以后，这个元素将会把下一次所有的鼠标按下相关的事件捕获到自身上（chrom 不支持）")]),t._v(" "),s("p",[t._v("releaseCapture()取消对鼠标的捕获（只有 IE8 有）")]),t._v(" "),s("blockquote",[s("p",[t._v("可以通过在元素.onxxs=绑定响应函数中 return false 来取消浏览器的默认行为 ，但是对 IE8 不起作用")]),t._v(" "),s("p",[t._v("如果使用 addEventListener()添加的响应函数，可以使用 event.preventDefault()取消浏览器默认行为")])]),t._v(" "),s("h2",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),s("ul",[s("li",[t._v("BOM（Browser Object Model）： 浏览器对象模型")]),t._v(" "),s("li",[t._v("操作浏览器的一些能力")]),t._v(" "),s("li",[t._v("对象  都是作为 window 对象的属性保存的\n"),s("ul",[s("li",[t._v("window  代表整个浏览器")]),t._v(" "),s("li",[t._v("navigator  代表当前浏览器的信息")]),t._v(" "),s("li",[t._v("location  代表当前浏览器的地址栏信息，或者跳转页面")]),t._v(" "),s("li",[t._v("history  代表浏览器的历史记录，可以通过该对象操作浏览器的历史记录 不能获取具体历史，只能操作向前或向后，且只在当次访问有效")]),t._v(" "),s("li",[t._v("screen  代表用户屏幕信息，可以获取用户的显示器相关信息")])])])]),t._v(" "),s("h4",{attrs:{id:"navigator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#navigator"}},[t._v("#")]),t._v(" navigator")]),t._v(" "),s("ul",[s("li",[t._v("appName() 返回浏览器的名字，现在已失效")]),t._v(" "),s("li",[t._v("userAgent() 来判断浏览器的信息，返回字符串 ，用正则表达式查找出浏览器名称")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("ActiveXObject in window")]),t._v("来判断是否是 IE 浏览器")])]),t._v(" "),s("h4",{attrs:{id:"history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" history")]),t._v(" "),s("ul",[s("li",[t._v("lenghth  历史访问链接数量")]),t._v(" "),s("li",[t._v("back()  回退到上一个页面  forward()  往前一个页面")]),t._v(" "),s("li",[t._v("go()  跳转到指定的页面，参数：\n"),s("ul",[s("li",[t._v("1 向前跳转一个页面， 2 向前跳转两个页面")]),t._v(" "),s("li",[t._v("-1 向后跳转一个页面， -2 向后跳转两个页面")])])])]),t._v(" "),s("h4",{attrs:{id:"location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location"}},[t._v("#")]),t._v(" Location")]),t._v(" "),s("ul",[s("li",[t._v("可以直接访问 location 获取浏览器地址栏，并修改")]),t._v(" "),s("li",[t._v("assign()  跳转到其他页面，与直接修改 location 一样，会生成历史记录")]),t._v(" "),s("li",[t._v("reload()  可用与重新加载页面，作用与 F5 一样，是保存缓存的刷新，若要强制清空浏览器缓存刷新，传人参数 true 即与 ctrl + F5 一样")]),t._v(" "),s("li",[t._v("replace() 替换当前页面到了链接，不会产生历史记录")])]),t._v(" "),s("h4",{attrs:{id:"window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" window")]),t._v(" "),s("p",[t._v("定时调用")]),t._v(" "),s("ul",[s("li",[t._v("setInterval() 设置函数隔一段时间执行一次，参数\n"),s("ul",[s("li",[t._v("回调函数")]),t._v(" "),s("li",[t._v("间隔时间，单位毫秒")]),t._v(" "),s("li",[t._v("返回值 为一个 number 作为定时器的唯一标志")])])]),t._v(" "),s("li",[t._v("clearInterval()  用一个定时器标识作为参数，清除一个定时器")])]),t._v(" "),s("p",[t._v("延时调用")]),t._v(" "),s("ul",[s("li",[t._v("setTimeout()  只执行一次，延时一段时间执行")])]),t._v(" "),s("h2",{attrs:{id:"修改样式-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改样式-2"}},[t._v("#")]),t._v(" 修改样式")]),t._v(" "),s("ul",[s("li",[t._v("通过 style 属性来修改元素的样式，每修改一个样式，浏览器就需要重新渲染一次页面，执行的性能差")]),t._v(" "),s("li",[t._v("通过修改 class 属性来间接修改样式，浏览器只需要重新渲染一次")]),t._v(" "),s("li",[t._v("className 获取元素的类属性")]),t._v(" "),s("li",[t._v('className.replace("xx","");  可以使用该方法来删除一个类名')]),t._v(" "),s("li",[t._v('toggleClass("class");  如果某个元素有这个类就删除，没有就添加')])]),t._v(" "),s("h1",{attrs:{id:"json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" JSON")]),t._v(" "),s("p",[t._v("json 就是一个特殊格式的"),s("strong",[t._v("字符串")]),t._v("，这个字符串可以被任意语言所识别，并且可以转换为任意语言中的对象，json 在开发中主要用来数据的交互")]),t._v(" "),s("ul",[s("li",[t._v("JSON\n"),s("ul",[s("li",[t._v("JavaScript Object Notation Js 对象表示法")]),t._v(" "),s("li",[t._v("JSON 和 JS 对象的格式一样，只不过 JSON 字符串中的"),s("strong",[t._v("属性名")]),t._v("必须加"),s("strong",[t._v("双引号")])]),t._v(" "),s("li",[t._v("其他和 js 语法一致")])])]),t._v(" "),s("li",[t._v("分类\n"),s("ol",[s("li",[t._v("对象 {}")]),t._v(" "),s("li",[t._v("数组 []")])])]),t._v(" "),s("li",[t._v("允许的值\n"),s("ol",[s("li",[t._v("字符串")]),t._v(" "),s("li",[t._v("数值")]),t._v(" "),s("li",[t._v("布尔值")]),t._v(" "),s("li",[t._v("null")]),t._v(" "),s("li",[t._v("对象（普通对象（包括数组对象），不包括函数对象）")]),t._v(" "),s("li",[t._v("数组")])])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建对象和数组")]),t._v("\nvar obj = '"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("“gender”"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("';\nvar arr = '"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("';\nvar obj2 = '"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"arr"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("';\nvar arr2 = '"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("“gender”"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("“gender”"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("';\n")])])]),s("p",[s("strong",[t._v("将 JSON 字符串转换为 JS 中的对象")])]),t._v(" "),s("p",[t._v("js 提供一个工具类 JSON，可以将 JSON 转换为 js 对象")]),t._v(" "),s("ul",[s("li",[t._v("JSON.prase()  可以将以 JSON 字符串转换为 js 对象\n"),s("ul",[s("li",[t._v("它需要一个 JSON 字符串作为参数，将该字符串转换为 js 对象")])])])]),t._v(" "),s("p",[s("strong",[t._v("将 js 字符串转换为 JSON")])]),t._v(" "),s("ul",[s("li",[t._v("JSON.stringify()\n"),s("ul",[s("li",[t._v("可以将一个 js 对象转换为 JSON 字符串")]),t._v(" "),s("li",[t._v("需要一个 js 对象作为参数，会返回一个 JSON 字符串")])])])]),t._v(" "),s("p",[s("strong",[t._v("eval()")])]),t._v(" "),s("ul",[s("li",[t._v("这个函数可以用来执行一段字符串形式的 js 代码，并将执行结果返回")]),t._v(" "),s("li",[t._v("如果使用 eval()执行的字符串中含有{}，它会将{}当成代码快，如果不希望当成代码块，需要在字符串前后加()")]),t._v(" "),s("li",[t._v("虽然 eval()很强大，但在开发中尽量不要使用，原因：\n"),s("ul",[s("li",[t._v("执行性能差")]),t._v(" "),s("li",[t._v("安全隐患")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"name":"张三","age":18,“gender”:"男"}\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("JSON 在 IE7-的浏览器中不支持，如果要兼容 IE7- 的 JSON 操作，可以通过引入一个 js 文件处理")])]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h3",{attrs:{id:"一元"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元"}},[t._v("#")]),t._v(" 一元")]),t._v(" "),s("p",[t._v("typeof")]),t._v(" "),s("ul",[s("li",[t._v("它会将该值的类型以字符串的形式返回，以表述该变量的类型")])]),t._v(" "),s("p",[t._v("+, -")]),t._v(" "),s("ul",[s("li",[t._v("数字取反")]),t._v(" "),s("li",[t._v("非 number 会先转换为 number 再计算（可以用这个特性来间接的转换类型）")])]),t._v(" "),s("h3",{attrs:{id:"二元"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二元"}},[t._v("#")]),t._v(" 二元")]),t._v(" "),s("ul",[s("li"),t._v(" "),s("li",[s("p",[t._v("纯数字进行算术加法运算")])]),t._v(" "),s("li",[s("p",[t._v("对非 Number 的类型运算，会将其他类型先转换为 Number 再运算")])]),t._v(" "),s("li",[s("p",[t._v("如果对两个字符串进行加法运算，会讲两个字符串拼接")])]),t._v(" "),s("li",[s("p",[t._v("任何时和字符串做加法运算，都会先转换为字符串，再拼接")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转换为字符串")]),t._v("\n")])])]),s("p",[t._v("-，*， /,  %")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("纯数字进行算术运算")])]),t._v(" "),s("li",[s("p",[t._v("对非 Number 的类型运算，会将其他类型先转换为 Number 再运算 aaaaaa")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转换为数字")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("== , ===")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("==")]),t._v("先转换类型再比较")]),t._v(" "),s("li",[s("code",[t._v("===")]),t._v("先判断类型，如果不是同一类型 false，若类型相同且内容相等，则返回 true")])]),t._v(" "),s("p",[t._v("|| ， &&")]),t._v(" "),s("ul",[s("li",[t._v("1 || 2         当 1 true 就不会执行 2，当 1 false 就执行 2")]),t._v(" "),s("li",[t._v("1 && 2        当 1 true 就执行 2，当 1 false 就不会执行 2")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
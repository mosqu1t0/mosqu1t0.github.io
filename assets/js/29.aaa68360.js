(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{296:function(s,t,a){"use strict";a.r(t);var e=a(10),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[s._v("#")]),s._v(" 多表查询")]),s._v(" "),t("h2",{attrs:{id:"多表关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表关系"}},[s._v("#")]),s._v(" 多表关系")]),s._v(" "),t("p",[s._v("项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构名，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：")]),s._v(" "),t("ul",[t("li",[s._v("一对多")]),s._v(" "),t("li",[s._v("多对多")]),s._v(" "),t("li",[s._v("一对一")])]),s._v(" "),t("h3",{attrs:{id:"一对多"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一对多"}},[s._v("#")]),s._v(" 一对多")]),s._v(" "),t("ul",[t("li",[s._v("案例：部门与员工的关系")]),s._v(" "),t("li",[s._v("关系：一个部门对应多个员工，一个员工对应一个部门")]),s._v(" "),t("li",[s._v("实现："),t("code",[s._v("在多的一方建立外键，指向一的一方的主键")])])]),s._v(" "),t("h3",{attrs:{id:"多对多"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多对多"}},[s._v("#")]),s._v(" 多对多")]),s._v(" "),t("ul",[t("li",[s._v("案例：学生与课程的关系")]),s._v(" "),t("li",[s._v("关系：一个学生可以选修多门课程，一门课程也可以供多个学生选修")]),s._v(" "),t("li",[s._v("实现："),t("code",[s._v("建立第三张中间表，中间表值扫包含两个外键，分别关联两方主键")])])]),s._v(" "),t("h3",{attrs:{id:"一对一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一对一"}},[s._v("#")]),s._v(" 一对一")]),s._v(" "),t("ul",[t("li",[s._v("案例：用户与用户详情的关系")]),s._v(" "),t("li",[s._v("关系：一对一关系，用于单表拆分，将一张表的基础字段放在在一张表中，其他详情字段放在另一张表中，以提升操作效率")]),s._v(" "),t("li",[s._v("实现："),t("code",[s._v("在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的( unique )")])])]),s._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("ul",[t("li",[s._v("概述：指从多张表中查询数据")]),s._v(" "),t("li",[s._v("笛卡尔积：笛卡儿积指子数学中，两个集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）")])]),s._v(" "),t("h2",{attrs:{id:"分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[s._v("#")]),s._v(" 分类")]),s._v(" "),t("ul",[t("li",[s._v("查询连接\n"),t("ul",[t("li",[s._v("内连接：相当于查询 A、B 交集部分数据")]),s._v(" "),t("li",[s._v("外连接：\n"),t("ul",[t("li",[s._v("左外连接：查询左表所有数据，以及两张表交集部分数据")]),s._v(" "),t("li",[s._v("右外连接：查询右表所有数据，以及两张表交集部分数据")])])]),s._v(" "),t("li",[s._v("自连接：当前表与自身的连接查询，自连接必须使用表别名")])])]),s._v(" "),t("li",[s._v("子查询")])]),s._v(" "),t("h3",{attrs:{id:"内连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[s._v("#")]),s._v(" 内连接")]),s._v(" "),t("p",[s._v("查询两张表交集的部分")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 隐式内连接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显式内连接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外连接"}},[s._v("#")]),s._v(" 外连接")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 两个写法可以互换")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左外连接，相当于查询左表（表 1）的所有数据，包含交集部分")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 右外连接，相当于查询右表（表 2）的所有数据，包含交集部分")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("right")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"自连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自连接"}},[s._v("#")]),s._v(" 自连接")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表框 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 A 别名 A "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表 A 别名 B "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"联合查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联合查询"}},[s._v("#")]),s._v(" 联合查询")]),s._v(" "),t("p",[s._v("对于 union 查询，就是把多次查询的结果合并起来，形成一个新的查询结果集。")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段列表 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表 B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[s._v("#")]),s._v(" 子查询")]),s._v(" "),t("p",[s._v("sql 语句中嵌套 select 语句，称为嵌套查询，又称为子查询")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" table1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" column1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" column1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" table2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("子查询外部的语句可以是 insert / update / delete / select 的任何一个")]),s._v(" "),t("p",[s._v("根据子查询结果的不同，分为：")]),s._v(" "),t("ul",[t("li",[s._v("标量子查询（子查询结果为单个值）")]),s._v(" "),t("li",[s._v("列子查询（查询结果为一列）")]),s._v(" "),t("li",[s._v("行子查询（查询结果为一行）")]),s._v(" "),t("li",[s._v("表子查询（查询结果为多行多列）")])]),s._v(" "),t("h4",{attrs:{id:"标量子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标量子查询"}},[s._v("#")]),s._v(" 标量子查询")]),s._v(" "),t("p",[s._v("子查询返回的结果是单个值（数字、字符串、日期等）, 最简单的形式，这种子查询成为标量子查询")]),s._v(" "),t("p",[s._v("常用的操作符："),t("code",[s._v("= , <> , > , >= , < , <=")])]),s._v(" "),t("h4",{attrs:{id:"列子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列子查询"}},[s._v("#")]),s._v(" 列子查询")]),s._v(" "),t("p",[s._v("子查询返回的结果是一列（可以是多行），这种子查询称为列子查询")]),s._v(" "),t("p",[s._v("常见的操作符："),t("code",[s._v("in , not in , any , some , all")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("操作符")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("in")]),s._v(" "),t("td",[s._v("在指定的集合范围之内，多选一")])]),s._v(" "),t("tr",[t("td",[s._v("not in")]),s._v(" "),t("td",[s._v("不在指定的集合范围之内")])]),s._v(" "),t("tr",[t("td",[s._v("any")]),s._v(" "),t("td",[s._v("子查询返回列表中，有任意一个满足即可")])]),s._v(" "),t("tr",[t("td",[s._v("some")]),s._v(" "),t("td",[s._v("与 any 等同，使用 some 的地方都可以使用 any")])]),s._v(" "),t("tr",[t("td",[s._v("all")]),s._v(" "),t("td",[s._v("子查询返回列表的所有值都必须满足")])])])]),s._v(" "),t("br"),s._v("\n例：\n"),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("some")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" dept_id  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dept "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'研发部'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("br"),s._v(" "),t("h4",{attrs:{id:"行子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行子查询"}},[s._v("#")]),s._v(" 行子查询")]),s._v(" "),t("p",[s._v("返回的结果是一行（可以是多列），这种子查询称为行子查询")]),s._v(" "),t("br"),s._v("\n例：\n"),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" managerid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" managerid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("br"),s._v(" "),t("h4",{attrs:{id:"多表查询-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-2"}},[s._v("#")]),s._v(" 多表查询")]),s._v(" "),t("p",[s._v("即将子查询的结果表作为表，进行进一步的查询")]),s._v(" "),t("br"),s._v("\n例：\n"),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" entrydate "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2006-01-01'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" dept d "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dept_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);
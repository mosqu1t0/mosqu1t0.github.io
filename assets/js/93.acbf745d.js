(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{360:function(t,a,n){"use strict";n.r(a);var e=n(10),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"变量与运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量与运算符"}},[t._v("#")]),t._v(" 变量与运算符")]),t._v(" "),a("h2",{attrs:{id:"let-与-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-与-const"}},[t._v("#")]),t._v(" let 与 const")]),t._v(" "),a("p",[t._v("用来声明变量，作用范围为当前作用域。")]),t._v(" "),a("p",[t._v("let 用来定义变量；\nconst 用来定义常量；\n例如：")]),t._v(" "),a("p",[t._v('let s = "acwing", x = 5;')]),t._v(" "),a("p",[t._v('let d = {\nname: "yxc",\nage: 18,\n}')]),t._v(" "),a("p",[t._v("const n = 100;")]),t._v(" "),a("h2",{attrs:{id:"变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[t._v("#")]),t._v(" 变量类型")]),t._v(" "),a("p",[t._v('number：数值变量，例如 1, 2.5\nstring：字符串，例如"acwing", \'yxc\'，单引号与双引号均可。字符串中的每个字符为只读类型。\nboolean：布尔值，例如 true, false\nobject：对象，类似于 C++中的指针，例如[1, 2, 3]，{name: "yxc", age: 18}，null\nundefined：未定义的变量\n类似于 Python，JavaScript 中的变量类型可以动态变化。')]),t._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("p",[t._v("与 C++、Python、Java 类似，不同点：")]),t._v(" "),a("p",[t._v("**表示乘方\n等于与不等于用===和！==")])])}),[],!1,null,null,null);a.default=s.exports}}]);
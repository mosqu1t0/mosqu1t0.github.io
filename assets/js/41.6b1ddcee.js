(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{308:function(t,s,a){"use strict";a.r(s);var n=a(10),v=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"类和对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类和对象"}},[t._v("#")]),t._v(" 类和对象")]),t._v(" "),s("h2",{attrs:{id:"引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),s("p",[t._v("相当于c里的指针，但是java里的引用只能指向对象")]),t._v(" "),s("h2",{attrs:{id:"继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),s("p",[t._v("一个类可以通过 extends 从父类继承 方法和属性")]),t._v(" "),s("h2",{attrs:{id:"构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[t._v("#")]),t._v(" 构造方法")]),t._v(" "),s("p",[t._v("通过一个类创建一个对象，叫做实例化")]),t._v(" "),s("p",[t._v("实例化是通过调用构造方法(构造器)实现的")]),t._v(" "),s("ul",[s("li",[t._v("方法名和类名一样")]),t._v(" "),s("li",[s("strong",[t._v("没有返回类型")])]),t._v(" "),s("li",[t._v("实例化一个对象时，必然调用构造方法")]),t._v(" "),s("li",[t._v("继承的类实例化时，父类的构造方法在子类前定义，调用，且不可更改顺序")]),t._v(" "),s("li",[t._v("如果提供了一个"),s("strong",[t._v("有参")]),t._v("的构造方法，同时"),s("strong",[t._v("没有")]),t._v("提供"),s("strong",[t._v("无参")]),t._v("的构造方法，那么默认的无参构成方法会"),s("strong",[t._v("覆盖")]),t._v("，需要重新定义\n"),s("ul",[s("li",[t._v("但构造方法可以"),s("strong",[t._v("重载")])])])])]),t._v(" "),s("h2",{attrs:{id:"this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),s("p",[t._v("代表当前对象")]),t._v(" "),s("ul",[s("li",[t._v("如果要在一个构造方法中调用另一个构造方法，可以使用this()")])]),t._v(" "),s("h2",{attrs:{id:"访问修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问修饰符"}},[t._v("#")]),t._v(" 访问修饰符")]),t._v(" "),s("ol",[s("li",[t._v("public")]),t._v(" "),s("li",[t._v("protected")]),t._v(" "),s("li",[t._v("package/default/friendly")]),t._v(" "),s("li",[t._v("private")])]),t._v(" "),s("h3",{attrs:{id:"类间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类间的关系"}},[t._v("#")]),t._v(" 类间的关系")]),t._v(" "),s("ul",[s("li",[t._v("自身")]),t._v(" "),s("li",[t._v("同包子类   B是A的子类，且和A处于同一个包下")]),t._v(" "),s("li",[t._v("异包子类   B是A的子类，但在另一个包下")]),t._v(" "),s("li",[t._v("同包类    B和A是同一个包，但彼此没有继承关系")]),t._v(" "),s("li",[t._v("其他类    B和A在不同的包下，也没有继承关系")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("修饰符")]),t._v(" "),s("th",[t._v("自身")]),t._v(" "),s("th",[t._v("同包子类")]),t._v(" "),s("th",[t._v("不同包子类")]),t._v(" "),s("th",[t._v("同包类")]),t._v(" "),s("th",[t._v("其他类")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("private")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("不能继承")]),t._v(" "),s("td",[t._v("不能继承")]),t._v(" "),s("td",[t._v("不可访问")]),t._v(" "),s("td",[t._v("不可访问")])]),t._v(" "),s("tr",[s("td",[t._v("default")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("可继承")]),t._v(" "),s("td",[t._v("不能继承")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("不可访问")])]),t._v(" "),s("tr",[s("td",[t._v("protected")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("可继承")]),t._v(" "),s("td",[t._v("可继承")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("不可访问")])]),t._v(" "),s("tr",[s("td",[t._v("public")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("可继承")]),t._v(" "),s("td",[t._v("可继承")]),t._v(" "),s("td",[t._v("可访问")]),t._v(" "),s("td",[t._v("可访问")])])])]),t._v(" "),s("p",[t._v("使用情况")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("属性")]),t._v("通常使用"),s("strong",[t._v("private")]),t._v("封装起来")]),t._v(" "),s("li",[s("strong",[t._v("方法")]),t._v("一般使用"),s("strong",[t._v("public")]),t._v("用于被调用")]),t._v(" "),s("li",[t._v("会被"),s("strong",[t._v("子类继承")]),t._v("的方法，通常使用"),s("strong",[t._v("protected")])]),t._v(" "),s("li",[t._v("package用的不多，一般新手会用package,因为还不知道有修饰符这个东西")])]),t._v(" "),s("p",[s("strong",[t._v("作用范围最小原则")])]),t._v(" "),s("p",[t._v("能用private就用private，不行就放大一级，用package,再不行就用protected，最后用public。 这样就能把数据尽量的封装起来，没有必要"),s("strong",[t._v("露出来的")]),t._v("，就不用"),s("strong",[t._v("露出来")]),t._v("了")]),t._v(" "),s("h2",{attrs:{id:"类属性-static"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类属性-static"}},[t._v("#")]),t._v(" 类属性(static)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("当一个属性被"),s("strong",[t._v("static")]),t._v("修饰的时候，就叫做"),s("strong",[t._v("类属性")]),t._v("，又叫做"),s("strong",[t._v("静态属性")])])]),t._v(" "),s("li",[s("p",[t._v("当一个属性被声明成类属性，那么"),s("strong",[t._v("所有的对象，都共享一个值")])])])]),t._v(" "),s("p",[s("strong",[t._v("类属性与对象属性不同")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("不同对象的 "),s("strong",[t._v("对象属性")]),t._v(" 的值都可能不一样")]),t._v(" "),s("li",[t._v("所有对象的"),s("strong",[t._v("类属性")]),t._v("的值，都是一样的")])]),t._v(" "),s("p",[t._v("访问")]),t._v(" "),s("p",[t._v("访问类属性两种方式：")]),t._v(" "),s("ul",[s("li",[t._v("对象.类属性")]),t._v(" "),s("li",[t._v("类.类属性(推荐)")])]),t._v(" "),s("h2",{attrs:{id:"类方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类方法"}},[t._v("#")]),t._v(" 类方法")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("类方法：")]),t._v(" 又叫做静态方法")]),t._v(" "),s("li",[s("strong",[t._v("对象方法：")]),t._v(" 又叫实例方法，非静态方法")])]),t._v(" "),s("p",[t._v("区别：访问一个对象方法，必须"),s("strong",[t._v("建立在有一个对象")]),t._v("的前提的基础上，访问类方法，"),s("strong",[t._v("不需要对象")]),t._v("的存在，直接就访问")]),t._v(" "),s("p",[t._v("访问类属性一样，调用类方法两种方式")]),t._v(" "),s("ul",[s("li",[t._v("对象.类属性")]),t._v(" "),s("li",[t._v("类.类属性(推荐)")])]),t._v(" "),s("p",[t._v("使用原则：")]),t._v(" "),s("ul",[s("li",[t._v("如果在某一个方法里，调用了对象属性，那么这个方法，就必须设计为对象，存在一个具体对象的时候，对象属性才有意义")]),t._v(" "),s("li",[t._v("如果一个方法，没有调用任何对象属性，那么就可以考虑设计为类方法\n"),s("ul",[s("li",[t._v("这样的方法，更带有"),s("strong",[t._v("功能性")]),t._v("色彩就像取随机数一样，"),s("code",[t._v("Math.random()")]),t._v("是一个功能用途的方法")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("静态方法、静态属性都是跟着类加载")]),t._v(" "),s("p",[t._v("静态方法优先对象方法加载进内存，若在类方法中调用对象方法，则无法加载对象方法")])]),t._v(" "),s("h2",{attrs:{id:"属性初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性初始化"}},[t._v("#")]),t._v(" 属性初始化")]),t._v(" "),s("p",[t._v("对象属性初始化方式：")]),t._v(" "),s("ol",[s("li",[t._v("声明该属性的时候初始化")]),t._v(" "),s("li",[t._v("构造方法中初始化")]),t._v(" "),s("li",[t._v("初始化块")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明该属性的时候初始化")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化块")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造方法中初始化")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("对象属性初始化方式：")]),t._v(" "),s("ol",[s("li",[t._v("声明该属性的时候初始化")]),t._v(" "),s("li",[t._v("静态初始化块")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" ver "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ver "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("因为static静态属性，随着类初始化而初始化，而构造方法要在初始化对象时才能初始化属性，因此没有放在构造方法中的初始化方法")]),t._v(" "),s("p",[t._v("即初始化顺序：静态变量、静态初始化块）>（变量、初始化块）>构造器")])]),t._v(" "),s("h2",{attrs:{id:"单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),s("p",[t._v("又叫做 Singleton模式，指的是一个类，在一个JVM里，只有一个实例存在。")]),t._v(" "),s("p",[t._v("三元素")]),t._v(" "),s("ol",[s("li",[t._v("构造方法私有化")]),t._v(" "),s("li",[t._v("静态属性指向实例")]),t._v(" "),s("li",[t._v("public static的 getInstance方法，返回第二步的静态属性")])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[s("p",[t._v("饿汉式单例模式")])]),t._v(" "),s("li",[s("p",[t._v("懒汉式单例模式")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//饿汉式单例模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleObject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//让构造方法为 private，这样该类就不会被实例化")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建 SingleObject 的一个对象")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleObject")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取唯一可用的对象")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleObject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//懒汉式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n            instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("饿汉式")]),t._v("是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。")]),t._v(" "),s("p",[s("strong",[t._v("懒汉式")]),t._v("，是延迟加载的方式，只有使用的时候才会加载。使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。")]),t._v(" "),s("p",[t._v("看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式")]),t._v(" "),s("p",[t._v("想看更多详细的可以找找 java设计模式的单例模式")])]),t._v(" "),s("h2",{attrs:{id:"枚举-enum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举-enum"}},[t._v("#")]),t._v(" 枚举(enum)")]),t._v(" "),s("p",[t._v("枚举是一种特殊的类，使用枚举可以很方便的定义常量")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Season")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tSPRING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("SUMMER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("AUTUMN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("WINTER\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Season")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Season")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("因为是常量，所以一般都是全大写")])])])}),[],!1,null,null,null);s.default=v.exports}}]);
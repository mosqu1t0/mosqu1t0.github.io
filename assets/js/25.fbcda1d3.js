(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{292:function(t,s,a){"use strict";a.r(s);var e=a(10),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dql"}},[t._v("#")]),t._v(" DQL")]),t._v(" "),s("h2",{attrs:{id:"数据查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据查询"}},[t._v("#")]),t._v(" 数据查询")]),t._v(" "),s("p",[t._v("查询关键字：select")]),t._v(" "),s("p",[s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n    字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n    表名列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    条件列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n    分组字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v("\n    分组后条件列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n    排序字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v("\n    分页参数\n")])])]),s("h3",{attrs:{id:"基本查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本查询"}},[t._v("#")]),t._v(" 基本查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("查询多个字段\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名；\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名；\n\n设置别名\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" 别名 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" 别名】"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名；\n\n 去除重复查询记录\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名；\n")])])]),s("h3",{attrs:{id:"条件查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[t._v("#")]),t._v(" 条件查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件列表\n")])])]),s("p",[s("strong",[t._v("条件：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("比较运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v(">")])]),t._v(" "),s("td",[t._v("大于")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v(">=")])]),t._v(" "),s("td",[t._v("大于等于")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("<")])]),t._v(" "),s("td",[t._v("小于")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("<=")])]),t._v(" "),s("td",[t._v("小于等于")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("=")])]),t._v(" "),s("td",[t._v("等于")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("<>")])]),t._v(" "),s("td",[s("code",[t._v("!=")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("between...and...")])]),t._v(" "),s("td",[t._v("在某个范围之内（含最小、最大值）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("in(...)")])]),t._v(" "),s("td",[t._v("在 in 之后的列表中的值，多选一")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("like 占位符")])]),t._v(" "),s("td",[t._v("模糊匹配（"),s("code",[t._v("_")]),t._v("匹配单个字符，"),s("code",[t._v("%")]),t._v(" 匹配任意个字符）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("is NULL")])]),t._v(" "),s("td",[t._v("是 NULL")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("逻辑运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AND 或 "),s("code",[t._v("&&")])]),t._v(" "),s("td",[t._v("并且")])]),t._v(" "),s("tr",[s("td",[t._v("OR 或 "),s("code",[t._v("||")])]),t._v(" "),s("td",[t._v("或")])]),t._v(" "),s("tr",[s("td",[t._v("NOT 或 "),s("code",[t._v("!")])]),t._v(" "),s("td",[t._v("非，不是")])])])]),t._v(" "),s("h3",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h4",{attrs:{id:"汇总"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇总"}},[t._v("#")]),t._v(" 汇总")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AVG()")]),t._v(" "),s("td",[t._v("返回某列的平均值")])]),t._v(" "),s("tr",[s("td",[t._v("COUNT()")]),t._v(" "),s("td",[t._v("返回某列的行数")])]),t._v(" "),s("tr",[s("td",[t._v("MAX()")]),t._v(" "),s("td",[t._v("返回某列的最大值")])]),t._v(" "),s("tr",[s("td",[t._v("MIN()")]),t._v(" "),s("td",[t._v("返回某列的最小值")])]),t._v(" "),s("tr",[s("td",[t._v("SUM()")]),t._v(" "),s("td",[t._v("返回某列值之和")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("AVG() 会忽略 NULL 行")])]),t._v(" "),s("p",[t._v("可以使用 distinct 可以汇总不同的值")]),t._v(" "),s("p",[t._v("例：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"文本处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本处理"}},[t._v("#")]),t._v(" 文本处理")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("LEFT()")]),t._v(" "),s("td",[t._v("左边的字符")])]),t._v(" "),s("tr",[s("td",[t._v("RIGHT()")]),t._v(" "),s("td",[t._v("右边的字符")])]),t._v(" "),s("tr",[s("td",[t._v("LOWER()")]),t._v(" "),s("td",[t._v("转换为小写字符")])]),t._v(" "),s("tr",[s("td",[t._v("UPPER()")]),t._v(" "),s("td",[t._v("转换为大写字符")])]),t._v(" "),s("tr",[s("td",[t._v("LTRIM()")]),t._v(" "),s("td",[t._v("去除左边的空格")])]),t._v(" "),s("tr",[s("td",[t._v("RTRIM()")]),t._v(" "),s("td",[t._v("去除右边的空格")])]),t._v(" "),s("tr",[s("td",[t._v("LENGTH()")]),t._v(" "),s("td",[t._v("长度")])]),t._v(" "),s("tr",[s("td",[t._v("SOUNDEX()")]),t._v(" "),s("td",[t._v("转换为语音值")])])])]),t._v(" "),s("p",[t._v("其中，SOUNDEX()可以将一个字符串转换为描述其语音表示的字母数字模式")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mytable\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" soundex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" soundex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"分组查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件】\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 分组字段名 【"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" 分组后过滤条件】"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("where 与 having 区别：")]),t._v(" "),s("ol",[s("li",[t._v("执行时机不同：where 是分组之前进行过滤，不满足 where 条件，不参与分组；而 having 是分组之后对结果进行过滤。")]),t._v(" "),s("li",[t._v("判断条件不同：where 不能对聚合函数进行判断，而 having 可以")])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("执行顺序：where > 聚合函数 > having")]),t._v(" "),s("li",[t._v("分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义")])])]),t._v(" "),s("p",[t._v("例：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"排序查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序查询"}},[t._v("#")]),t._v(" 排序查询")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 排序方式 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 字段 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 排序方式 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("排列方式：")]),t._v(" "),s("ul",[s("li",[t._v("ASC: 升序")]),t._v(" "),s("li",[t._v("DESC: 升序")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序。")])]),t._v(" "),s("p",[t._v("例：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" 起始索引，查询记录数；\n\n")])])]),s("blockquote",[s("ul",[s("li",[t._v("起始索引从 0 开始，起始索引=（查询页码-1） * 每页显示记录数")]),t._v(" "),s("li",[t._v("分页查询住不同数据库有不同的实现，mysql 中是 LIMIT")]),t._v(" "),s("li",[t._v("如果查询的是第一页数据，起始索引可以省略，直接简写成 limit10")])])]),t._v(" "),s("h2",{attrs:{id:"dql-执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dql-执行顺序"}},[t._v("#")]),t._v(" DQL 执行顺序")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n    表名列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n    条件列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n    分组字段控制\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v("\n    分组后后条件判断\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n    字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n    排列字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v("\n    分页参数\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{314:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),a("blockquote",[a("p",[t._v("注解是 JDK1.5 版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。它是框架学习和设计者必须掌握的基础。")])]),t._v(" "),a("p",[t._v("注解基础：")]),t._v(" "),a("ul",[a("li",[t._v("生存文档，通过代码里标识的元数据生成 javadoc 文档")]),t._v(" "),a("li",[t._v("编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。")]),t._v(" "),a("li",[t._v("编译时动态处理，编译时通过代码里标识的元数据动态处理")]),t._v(" "),a("li",[t._v("运行时动态处理，运行时通过代码里标识的元数据动态处理，例如使用反射注入实例。")])]),t._v(" "),a("p",[t._v("注解常用分类：")]),t._v(" "),a("ul",[a("li",[t._v("Java 自带的标准注解，包括"),a("code",[t._v("@Override")]),t._v("，"),a("code",[t._v("@Deprecated")]),t._v("和"),a("code",[t._v("@SuppressWarnings")]),t._v("，分别用于标明重写某个方法、标明某个类或方法过时、标明要忽略的警告，用这些注解标明后编译器就会进行检查。")]),t._v(" "),a("li",[t._v("元注解，元注解是用于定义注解的注解，包括"),a("code",[t._v("@Retention")]),t._v("、"),a("code",[t._v("@Target")]),t._v("、"),a("code",[t._v("@Inherited")]),t._v("、"),a("code",[t._v("@Documented")]),t._v("、"),a("code",[t._v("@Retention")]),t._v("用于标明注解被保留的阶段，"),a("code",[t._v("@Target")]),t._v("用于标明注解使用的范围，"),a("code",[t._v("@Inherited")]),t._v("用于标明注解可继承，"),a("code",[t._v("@Documented")]),t._v("用于标明是否生成 javadoc 文档。")]),t._v(" "),a("li",[t._v("自定义注解，可以根据自己的需求定义注解，并可用元注解对自定义注解进行注解")])]),t._v(" "),a("h2",{attrs:{id:"java-内置注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-内置注解"}},[t._v("#")]),t._v(" Java 内置注解")]),t._v(" "),a("p",[t._v("从最为常见的 Java 内置的注解开始说起。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("在使用 Annotation 时要在其前面添加"),a("code",[t._v("@")]),t._v("符号，并把该 Annotation 当成一个修饰符使用。用于修饰它支持的程序元素")])]),t._v(" "),a("h3",{attrs:{id:"override"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#override"}},[t._v("#")]),t._v(" @Override")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("限定某方法，是重写父类方法，该注解只能用于方法")])]),t._v(" "),a("li",[a("p",[t._v("如果没有写"),a("code",[t._v("@Override")]),t._v("还是重写了父类的方法，编译器一样能判断是否进行了重写")])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("语法校验："),a("br"),t._v("\n如果写了@Override 注解，编译器就会其检查该方法是否真的重写了父类的方法。如果的确重写了，则编译通过，如果没有构成重写，则编译错误")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("METHOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SOURCE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解读：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@interface")]),t._v("表示一个注解类")]),t._v(" "),a("li",[a("code",[t._v("@Target(ElementType.METHOD)")]),t._v(",说明只能修饰方法，即元素的类型为方法")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("@Target 是修饰注解的注解称为元注解")])]),t._v(" "),a("h3",{attrs:{id:"deprecated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deprecated"}},[t._v("#")]),t._v(" @Deprecated")]),t._v(" "),a("ul",[a("li",[t._v("用于表示某个程序元素（类，方法，字段，包，参数等）已过时")]),t._v(" "),a("li",[t._v("不推荐使用，但是仍然可以使用")]),t._v(" "),a("li",[a("code",[t._v("@Deprecated")]),t._v(" 一般做版本升级过度使用")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RUNTIME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CONSTRUCTOR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FIELD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOCAL_VARIABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" METHOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PACKAGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PARAMETER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TYPE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Deprecated")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从它的定义我们可以知道，它会被文档化，能够保留到运行时，能够修饰构造方法、属性、局部变量、方法、包、参数、类型。这个注解的作用是告诉编译器被修饰的程序元素已被“废弃”，不再建议用户使用。")]),t._v(" "),a("p",[a("strong",[t._v("解读：")])]),t._v(" "),a("ul",[a("li",[t._v("CONSTRUCTOR 构造器，FIELD 字段（属性），LOCAL_VARIABLE  （局部变量），METHOD 方法，PACKAGE 包，PARAMETER 参数，TYPE 类型")])]),t._v(" "),a("h3",{attrs:{id:"suppresswarnings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#suppresswarnings"}},[t._v("#")]),t._v(" @Suppresswarnings")]),t._v(" "),a("ul",[a("li",[t._v("当不希望看到警告时，可以使用 Suppresswarnings 注解来抑制编译器警告")]),t._v(" "),a("li",[t._v('在{""}中，写入希望抑制的信息\n'),a("ul",[a("li",[t._v("unchecked 忽略没有检查的警告")]),t._v(" "),a("li",[t._v("rawtypes 忽略没有指定泛型的警告（传参时没有指定泛型的警告错误）")]),t._v(" "),a("li",[t._v("unused 忽略没有使用某个变量的警告错误")])])]),t._v(" "),a("li",[t._v("作用范围和放的位置相关，一般放在合适的位置就行了")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("TYPE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FIELD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" METHOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PARAMETER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CONSTRUCTOR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOCAL_VARIABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MODULE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SOURCE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuppressWarnings")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("解读：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("String[] value()")]),t._v("是传入的信息数组")])]),t._v(" "),a("h2",{attrs:{id:"jdk-元注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk-元注解"}},[t._v("#")]),t._v(" JDK 元注解")]),t._v(" "),a("ul",[a("li",[t._v("元 Annotation 用于修饰其他 Annotation")]),t._v(" "),a("li",[t._v("元注解的作用不大，了解它方便读懂源码")])]),t._v(" "),a("p",[a("strong",[t._v("种类：")])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Retention")]),t._v(" 指定注解的作用范围（指定注解可以保留多长时间），RetentionPolicy 成员变量 value 要指定以下的值\n"),a("ul",[a("li",[t._v("SOURCE（编译器使用后，直接丢弃这种策略的注解）")]),t._v(" "),a("li",[t._v("CLASS（编译器将把注解记录在 class 文件中，当运行 java 程序时，JVM 不会保留注解。默认值）")]),t._v(" "),a("li",[t._v("RUNTIME（编译器将把注解记录在 class 文件中。当运行 Java 程序时，jvm 会保留注解。程序可以通过反射获取该注解）")])])]),t._v(" "),a("li",[a("strong",[t._v("Target")]),t._v(" 指定注解可以在哪些地方使用，包含一个 value 变量")]),t._v(" "),a("li",[a("strong",[t._v("Documented")]),t._v(" 指定该注解是否会在 javadoc 体现，即生成文档时，是否看得到该注解")]),t._v(" "),a("li",[a("strong",[t._v("Inherited")]),t._v(" 子类会继承父类的该注解")])])])}),[],!1,null,null,null);a.default=e.exports}}]);